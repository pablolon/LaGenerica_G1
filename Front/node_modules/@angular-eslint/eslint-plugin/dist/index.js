var e=require("@typescript-eslint/experimental-utils"),t=require("@angular/compiler");const r=e.ESLintUtils.RuleCreator(e=>"https://github.com/angular-eslint/angular-eslint");function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var o="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function a(e){var t={exports:{}};return e(t,t.exports),t.exports}var s=a(function(e,t){var r,n;Object.defineProperty(t,"__esModule",{value:!0}),t.AST_TOKEN_TYPES=t.AST_NODE_TYPES=void 0,(r=t.AST_NODE_TYPES||(t.AST_NODE_TYPES={})).ArrayExpression="ArrayExpression",r.ArrayPattern="ArrayPattern",r.ArrowFunctionExpression="ArrowFunctionExpression",r.AssignmentExpression="AssignmentExpression",r.AssignmentPattern="AssignmentPattern",r.AwaitExpression="AwaitExpression",r.BinaryExpression="BinaryExpression",r.BlockStatement="BlockStatement",r.BreakStatement="BreakStatement",r.CallExpression="CallExpression",r.CatchClause="CatchClause",r.ChainExpression="ChainExpression",r.ClassBody="ClassBody",r.ClassDeclaration="ClassDeclaration",r.ClassExpression="ClassExpression",r.ClassProperty="ClassProperty",r.ConditionalExpression="ConditionalExpression",r.ContinueStatement="ContinueStatement",r.DebuggerStatement="DebuggerStatement",r.Decorator="Decorator",r.DoWhileStatement="DoWhileStatement",r.EmptyStatement="EmptyStatement",r.ExportAllDeclaration="ExportAllDeclaration",r.ExportDefaultDeclaration="ExportDefaultDeclaration",r.ExportNamedDeclaration="ExportNamedDeclaration",r.ExportSpecifier="ExportSpecifier",r.ExpressionStatement="ExpressionStatement",r.ForInStatement="ForInStatement",r.ForOfStatement="ForOfStatement",r.ForStatement="ForStatement",r.FunctionDeclaration="FunctionDeclaration",r.FunctionExpression="FunctionExpression",r.Identifier="Identifier",r.IfStatement="IfStatement",r.ImportDeclaration="ImportDeclaration",r.ImportDefaultSpecifier="ImportDefaultSpecifier",r.ImportExpression="ImportExpression",r.ImportNamespaceSpecifier="ImportNamespaceSpecifier",r.ImportSpecifier="ImportSpecifier",r.JSXAttribute="JSXAttribute",r.JSXClosingElement="JSXClosingElement",r.JSXClosingFragment="JSXClosingFragment",r.JSXElement="JSXElement",r.JSXEmptyExpression="JSXEmptyExpression",r.JSXExpressionContainer="JSXExpressionContainer",r.JSXFragment="JSXFragment",r.JSXIdentifier="JSXIdentifier",r.JSXMemberExpression="JSXMemberExpression",r.JSXNamespacedName="JSXNamespacedName",r.JSXOpeningElement="JSXOpeningElement",r.JSXOpeningFragment="JSXOpeningFragment",r.JSXSpreadAttribute="JSXSpreadAttribute",r.JSXSpreadChild="JSXSpreadChild",r.JSXText="JSXText",r.LabeledStatement="LabeledStatement",r.Literal="Literal",r.LogicalExpression="LogicalExpression",r.MemberExpression="MemberExpression",r.MetaProperty="MetaProperty",r.MethodDefinition="MethodDefinition",r.NewExpression="NewExpression",r.ObjectExpression="ObjectExpression",r.ObjectPattern="ObjectPattern",r.Program="Program",r.Property="Property",r.RestElement="RestElement",r.ReturnStatement="ReturnStatement",r.SequenceExpression="SequenceExpression",r.SpreadElement="SpreadElement",r.Super="Super",r.SwitchCase="SwitchCase",r.SwitchStatement="SwitchStatement",r.TaggedTemplateExpression="TaggedTemplateExpression",r.TemplateElement="TemplateElement",r.TemplateLiteral="TemplateLiteral",r.ThisExpression="ThisExpression",r.ThrowStatement="ThrowStatement",r.TryStatement="TryStatement",r.UnaryExpression="UnaryExpression",r.UpdateExpression="UpdateExpression",r.VariableDeclaration="VariableDeclaration",r.VariableDeclarator="VariableDeclarator",r.WhileStatement="WhileStatement",r.WithStatement="WithStatement",r.YieldExpression="YieldExpression",r.TSAbstractClassProperty="TSAbstractClassProperty",r.TSAbstractKeyword="TSAbstractKeyword",r.TSAbstractMethodDefinition="TSAbstractMethodDefinition",r.TSAnyKeyword="TSAnyKeyword",r.TSArrayType="TSArrayType",r.TSAsExpression="TSAsExpression",r.TSAsyncKeyword="TSAsyncKeyword",r.TSBigIntKeyword="TSBigIntKeyword",r.TSBooleanKeyword="TSBooleanKeyword",r.TSCallSignatureDeclaration="TSCallSignatureDeclaration",r.TSClassImplements="TSClassImplements",r.TSConditionalType="TSConditionalType",r.TSConstructorType="TSConstructorType",r.TSConstructSignatureDeclaration="TSConstructSignatureDeclaration",r.TSDeclareFunction="TSDeclareFunction",r.TSDeclareKeyword="TSDeclareKeyword",r.TSEmptyBodyFunctionExpression="TSEmptyBodyFunctionExpression",r.TSEnumDeclaration="TSEnumDeclaration",r.TSEnumMember="TSEnumMember",r.TSExportAssignment="TSExportAssignment",r.TSExportKeyword="TSExportKeyword",r.TSExternalModuleReference="TSExternalModuleReference",r.TSFunctionType="TSFunctionType",r.TSImportEqualsDeclaration="TSImportEqualsDeclaration",r.TSImportType="TSImportType",r.TSIndexedAccessType="TSIndexedAccessType",r.TSIndexSignature="TSIndexSignature",r.TSInferType="TSInferType",r.TSInterfaceBody="TSInterfaceBody",r.TSInterfaceDeclaration="TSInterfaceDeclaration",r.TSInterfaceHeritage="TSInterfaceHeritage",r.TSIntersectionType="TSIntersectionType",r.TSIntrinsicKeyword="TSIntrinsicKeyword",r.TSLiteralType="TSLiteralType",r.TSMappedType="TSMappedType",r.TSMethodSignature="TSMethodSignature",r.TSModuleBlock="TSModuleBlock",r.TSModuleDeclaration="TSModuleDeclaration",r.TSNamedTupleMember="TSNamedTupleMember",r.TSNamespaceExportDeclaration="TSNamespaceExportDeclaration",r.TSNeverKeyword="TSNeverKeyword",r.TSNonNullExpression="TSNonNullExpression",r.TSNullKeyword="TSNullKeyword",r.TSNumberKeyword="TSNumberKeyword",r.TSObjectKeyword="TSObjectKeyword",r.TSOptionalType="TSOptionalType",r.TSParameterProperty="TSParameterProperty",r.TSParenthesizedType="TSParenthesizedType",r.TSPrivateKeyword="TSPrivateKeyword",r.TSPropertySignature="TSPropertySignature",r.TSProtectedKeyword="TSProtectedKeyword",r.TSPublicKeyword="TSPublicKeyword",r.TSQualifiedName="TSQualifiedName",r.TSReadonlyKeyword="TSReadonlyKeyword",r.TSRestType="TSRestType",r.TSStaticKeyword="TSStaticKeyword",r.TSStringKeyword="TSStringKeyword",r.TSSymbolKeyword="TSSymbolKeyword",r.TSTemplateLiteralType="TSTemplateLiteralType",r.TSThisType="TSThisType",r.TSTupleType="TSTupleType",r.TSTypeAliasDeclaration="TSTypeAliasDeclaration",r.TSTypeAnnotation="TSTypeAnnotation",r.TSTypeAssertion="TSTypeAssertion",r.TSTypeLiteral="TSTypeLiteral",r.TSTypeOperator="TSTypeOperator",r.TSTypeParameter="TSTypeParameter",r.TSTypeParameterDeclaration="TSTypeParameterDeclaration",r.TSTypeParameterInstantiation="TSTypeParameterInstantiation",r.TSTypePredicate="TSTypePredicate",r.TSTypeQuery="TSTypeQuery",r.TSTypeReference="TSTypeReference",r.TSUndefinedKeyword="TSUndefinedKeyword",r.TSUnionType="TSUnionType",r.TSUnknownKeyword="TSUnknownKeyword",r.TSVoidKeyword="TSVoidKeyword",(n=t.AST_TOKEN_TYPES||(t.AST_TOKEN_TYPES={})).Boolean="Boolean",n.Identifier="Identifier",n.JSXIdentifier="JSXIdentifier",n.JSXText="JSXText",n.Keyword="Keyword",n.Null="Null",n.Numeric="Numeric",n.Punctuator="Punctuator",n.RegularExpression="RegularExpression",n.String="String",n.Template="Template",n.Block="Block",n.Line="Line"});Object.defineProperty(exports,"__esModule",{value:!0});var i={__proto__:null};Object.defineProperty(exports,"__esModule",{value:!0});var l={__proto__:null},c=a(function(e,t){var r=o&&o.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),n=o&&o.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=o&&o.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o in e)"default"!==o&&Object.prototype.hasOwnProperty.call(e,o)&&r(t,e,o);return n(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.TSESTree=void 0,t.TSESTree=a(s)}),p=a(function(e,t){var r=o&&o.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),n=o&&o.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.AST_TOKEN_TYPES=t.AST_NODE_TYPES=void 0,Object.defineProperty(t,"AST_NODE_TYPES",{enumerable:!0,get:function(){return s.AST_NODE_TYPES}});var a=s;Object.defineProperty(t,"AST_TOKEN_TYPES",{enumerable:!0,get:function(){return a.AST_TOKEN_TYPES}}),n(i,t),n(l,t),n(c,t)});const u=Object.keys;var d,m,f,g;!function(e){e.Component="Component",e.Directive="Directive",e.Injectable="Injectable",e.NgModule="NgModule",e.Pipe="Pipe"}(d||(d={})),function(e){e.Attribute="Attribute",e.Host="Host",e.Inject="Inject",e.Optional="Optional",e.Self="Self",e.SkipSelf="SkipSelf"}(m||(m={})),function(e){e.HostListener="HostListener"}(f||(f={})),function(e){e.ContentChild="ContentChild",e.ContentChildren="ContentChildren",e.HostBinding="HostBinding",e.Input="Input",e.Output="Output",e.ViewChild="ViewChild",e.ViewChildren="ViewChildren"}(g||(g={}));const y=n({},m,f,g);var h,S;!function(e){e.AfterContentChecked="AfterContentChecked",e.AfterContentInit="AfterContentInit",e.AfterViewChecked="AfterViewChecked",e.AfterViewInit="AfterViewInit",e.DoBootstrap="DoBootstrap",e.DoCheck="DoCheck",e.OnChanges="OnChanges",e.OnDestroy="OnDestroy",e.OnInit="OnInit"}(h||(h={})),function(e){e.ngAfterContentChecked="ngAfterContentChecked",e.ngAfterContentInit="ngAfterContentInit",e.ngAfterViewChecked="ngAfterViewChecked",e.ngAfterViewInit="ngAfterViewInit",e.ngDoBootstrap="ngDoBootstrap",e.ngDoCheck="ngDoCheck",e.ngOnChanges="ngOnChanges",e.ngOnDestroy="ngOnDestroy",e.ngOnInit="ngOnInit"}(S||(S={}));const T="camelCase",x="kebab-case",v=u(d),b=u(y),w=u(h),E=u(S),D=new Map([[d.Component,new Set([S.ngAfterContentChecked,S.ngAfterContentInit,S.ngAfterViewChecked,S.ngAfterViewInit,S.ngOnChanges,S.ngOnDestroy,S.ngOnInit,S.ngDoCheck])],[d.Directive,new Set([S.ngAfterContentChecked,S.ngAfterContentInit,S.ngAfterViewChecked,S.ngAfterViewInit,S.ngOnChanges,S.ngOnDestroy,S.ngOnInit,S.ngDoCheck])],[d.Injectable,new Set([S.ngOnDestroy])],[d.NgModule,new Set([S.ngDoBootstrap])],[d.Pipe,new Set([S.ngOnDestroy])]]),C=new Set(b),P=new Set(v),I=new Map([[d.Component,C],[d.Directive,C],[d.Injectable,new Set([y.Host,y.Inject,y.Optional,y.Self,y.SkipSelf])],[d.NgModule,new Set([y.Host,y.Inject,y.Optional,y.Self,y.SkipSelf])],[d.Pipe,new Set([y.Host,y.Inject,y.Optional,y.Self,y.SkipSelf])]]);function O(e){return e.type===p.AST_NODE_TYPES.CallExpression}function A(e){return e.type===p.AST_NODE_TYPES.ClassDeclaration}function k(e){return e.type===p.AST_NODE_TYPES.ObjectExpression}function N(e){return e.type===p.AST_NODE_TYPES.ArrayExpression}function M(e){return e.type===p.AST_NODE_TYPES.Property}function j(e){return e.type===p.AST_NODE_TYPES.Program}function _(e){return e.type===p.AST_NODE_TYPES.Literal}function B(e){return e.type===p.AST_NODE_TYPES.TemplateLiteral}function R(e){return e.type===p.AST_NODE_TYPES.ImportDeclaration}function $(e){return e.type===p.AST_NODE_TYPES.ImportSpecifier}function K(e){return _(e)&&"string"==typeof e.value}function U(e){return e.type===p.AST_NODE_TYPES.MethodDefinition}function L({parent:e},t){for(;e&&!j(e);){if(t(e))return e;e=e.parent}return null}function V(e,t){let r=e;for(;r=r.parent;)if(j(r))return r.body.filter(e=>R(e)&&e.source.value===t);return r}function F(t,r,n,o){const{implements:a}=r;if(!a)return;const s=a.map(({expression:e})=>e).filter(e.ASTUtils.isIdentifier).find(({name:e})=>e===n);if(!s)return;const i=a[0].expression===s;if(i&&a[a.length-1].expression===s&&r.id)return o.removeRange([r.id.range[1],a[0].range[1]]);const l=t.getTokenAfter(s);if(i&&l)return o.removeRange([s.range[0],l.range[1]]);const c=t.getTokenBefore(s);return c?o.removeRange([c.range[0],s.range[1]]):void 0}function J(t,r,n){const o=t.getTokenAfter(r);return o&&e.ASTUtils.isCommaToken(o)?n.removeRange([r.range[0],o.range[1]]):n.remove(r)}function X(e){return e.slice(-1)[0]}function q(e,t,r,n){const o=V(e,t);if(null==o||!o.length)return n.insertTextAfterRange([0,0],`import { ${r} } from '${t}';\n`);const a=X(o[0].specifiers);return n.insertTextAfter(a,`, ${r}`)}function Y(e,t,r,n){var o;const{importDeclaration:a,importSpecifier:s}=null!=(o=function(e,t){for(const r of e){const e=r.specifiers.find(e=>$(e)&&e.imported.name===t);if(e)return{importDeclaration:r,importSpecifier:e}}}(t,r))?o:{};if(!a||!s)return;const i=a.specifiers[0]===s;if(i&&a.specifiers[a.specifiers.length-1]===s)return n.remove(a);const l=e.getTokenAfter(s);if(i&&l)return n.removeRange([s.range[0],l.range[1]]);const c=e.getTokenBefore(s);return c?n.removeRange([c.range[0],s.range[1]]):void 0}const H=e=>{var t;return A(e)?null==(t=e.id)?void 0:t.name:e.parent?H(e.parent):void 0},z=({decorators:e})=>null==e?void 0:e.map(W).filter(ce).find(oe),W=({expression:t})=>e.ASTUtils.isIdentifier(t)?t.name:O(t)&&e.ASTUtils.isIdentifier(t.callee)?t.callee.name:void 0,G=e=>{var t;return null!=(t=e.implements)?t:[]},Q=t=>G(t).map(({expression:e})=>function(e){return e.type===p.AST_NODE_TYPES.MemberExpression}(e)?e.property:e).filter(e.ASTUtils.isIdentifier).map(({name:e})=>e),Z=e=>Q(e).filter(re),ee=new Set(w),te=new Set(E),re=e=>ee.has(e),ne=e=>te.has(e),oe=e=>P.has(e),ae=(t,r)=>{var n;return null==(n=((t,r)=>{var n;return null==(n=(({expression:e})=>{if(!O(e)||0===e.arguments.length)return;const[t]=e.arguments;return k(t)&&t.properties?t:void 0})(t))?void 0:n.properties.filter(M).find(({key:t})=>e.ASTUtils.isIdentifier(t)&&t.name===r)})(t,r))?void 0:n.value},se=({body:{body:e}})=>e.filter(U),ie=t=>K(t.key)?t.key.value:e.ASTUtils.isIdentifier(t.key)?t.key.name:void 0;function le(e){return Array.isArray(e)?e:e?[e]:[]}const ce=e=>null!=e,pe={attribute:e=>0!==e.length,camelCase:e=>/^[a-zA-Z0-9[\]]+$/.test(e),element:e=>null!==e,kebabCase:e=>/^[a-z0-9-]+-[a-z0-9-]+$/.test(e),prefix(e,t){const r=new RegExp(`^\\[?(${e})`);return n=>{if(!e)return!0;if(!r.test(n))return!1;const o=n.replace(r,"");if(t===T)return!o||o[0]===o[0].toUpperCase();if(t===x)return!o||"-"===o[0];throw Error("Invalid selector style!")}}};function ue(e,t){const r=V(e,t);return Boolean(null==r?void 0:r.some(t=>t.specifiers.some(t=>$(t)&&t.imported.name===e.name&&t.local.name===e.name)))}const de=e=>{const t=e.length;return 1===t?`"${e[0]}"`:`${e.map(e=>`"${e}"`).slice(0,t-1).join(", ")} or "${[...e].pop()}"`},me=e=>RegExp(`^(${e.join("|")})$`);var fe=r({name:"contextual-decorator",meta:{type:"suggestion",docs:{description:"Ensures that classes use contextual decorators in its body",category:"Best Practices",recommended:!1},schema:[],messages:{contextualDecorator:'Decorator out of context for "@{{classDecoratorName}}()"'}},defaultOptions:[],create:e=>({"MethodDefinition[kind=/^(get|set|method)$/], ClassProperty, TSParameterProperty"(t){!function(e,t){var r;if(null==(r=t.decorators)||!r.length)return;const n=L(t,A);if(!n)return;const o=z(n);if(o)for(const r of t.decorators)ge(e,r,o)}(e,t)}})});function ge(e,t,r){const n=W(t);if(!n||!C.has(n))return;const o=I.get(r);null!=o&&o.has(n)||e.report({node:t,messageId:"contextualDecorator",data:{classDecoratorName:r}})}const ye='ClassDeclaration > Decorator:matches([expression.callee.name="Component"], [expression.callee.name="Directive"])',he='ClassDeclaration > Decorator[expression.callee.name="Component"]',Se='ClassDeclaration > Decorator[expression.callee.name="Directive"]',Te='ClassDeclaration > Decorator[expression.callee.name="Pipe"]',xe='Decorator[expression.callee.name="Output"]';var ve=r({name:"component-class-suffix",meta:{type:"suggestion",docs:{description:'Classes decorated with @Component must have suffix "Component" (or custom) in their name. See more at https://angular.io/styleguide#style-02-03',category:"Best Practices",recommended:"error"},schema:[{type:"object",properties:{suffixes:{type:"array",items:{type:"string"}}},additionalProperties:!1}],messages:{componentClassSuffix:"Component class names should end with one of these suffixes: {{suffixes}} (https://angular.io/styleguide#style-02-03)"}},defaultOptions:[{suffixes:["Component"]}],create:(e,[{suffixes:t}])=>({[he](r){const n=r.parent,o=H(n);o&&t.some(e=>o.endsWith(e))||e.report({node:n.id?n.id:n,messageId:"componentClassSuffix",data:{suffixes:de(t)}})}})});const be=/\r\n|\r|\n/;function we(e){return B(e)?e.quasis[0].value.raw.trim().split(be).length:_(e)?e.raw.trim().split(be).length:0}var Ee=r({name:"component-max-inline-declarations",meta:{type:"suggestion",docs:{description:"Enforces a maximum number of lines in inline template, styles and animations. See more at https://angular.io/guide/styleguide#style-05-04",category:"Best Practices",recommended:!1},schema:[{type:"object",properties:{template:{minimum:0,type:"number"},styles:{minimum:0,type:"number"},animations:{minimum:0,type:"number"}},additionalProperties:!1}],messages:{componentMaxInlineDeclarations:"`{{propertyType}}` has too many lines ({{lineCount}}). Maximum allowed is {{max}} (https://angular.io/guide/styleguide#style-05-04)"}},defaultOptions:[{template:3,styles:3,animations:15}],create:(e,[{template:t=3,styles:r=3,animations:n=15}])=>({[`${he} Property[key.name='template']`]({value:r}){const n=we(r);n<=t||e.report({node:r,messageId:"componentMaxInlineDeclarations",data:{lineCount:n,max:t,propertyType:"template"}})},[`${he} Property[key.name='styles']`]({value:t}){if(!N(t))return;const n=t.elements.reduce((e,t)=>e+we(t),0);n<=r||e.report({node:t,messageId:"componentMaxInlineDeclarations",data:{lineCount:n,max:r,propertyType:"styles"}})},[`${he} Property[key.name='animations']`]({value:t}){if(!N(t)||0===t.elements.length)return;const r=Math.max(t.loc.end.line-t.loc.start.line-2,1);r<=n||e.report({node:t,messageId:"componentMaxInlineDeclarations",data:{lineCount:r,max:n,propertyType:"animations"}})}})});const De="attribute",Ce="element",Pe={[De]:"attrs",[Ce]:Ce},Ie=(e,t,r)=>{r.report({node:e,messageId:"prefixFailure",data:{prefix:de(le(t))}})},Oe=(e,t,r)=>{r.report({node:e,messageId:"styleFailure",data:{style:t}})},Ae=(e,t,r)=>{r.report({node:e,messageId:"typeFailure",data:{type:t}})},ke=(e,t,r)=>{const n=le(e),o=r,a=n.length>0&&n.every(e=>-1!==[Ce,De].indexOf(e)),s=t.length>0,i=-1!==[T,x].indexOf(o);return a&&s&&i},Ne=(e,r,n,o)=>{const a=le(r||["attrs",Ce]).reduce((e,t)=>e.concat(Pe[t]),[]),s=o===x?pe.kebabCase:pe.camelCase;let i=null;if(e&&_(e)?i=t.CssSelector.parse(e.raw):e&&B(e)&&e.quasis[0]&&(i=t.CssSelector.parse(e.quasis[0].value.raw)),!i)return null;const l=((e,t)=>e.reduce((e,r)=>{const n=t.reduce((e,t)=>{const n=r[t];return n?e.concat(n):e},[]);return e.concat(n)},[]))(i,a),c=l.some(e=>n.some(t=>pe.prefix(t,o)(e))),p=l.some(e=>s(e));return{hasExpectedPrefix:c,hasExpectedType:l.length>0,hasExpectedStyle:p}};var Me=r({name:"component-selector",meta:{type:"suggestion",docs:{description:"Component selectors should follow given naming rules. See more at https://angular.io/guide/styleguide#style-02-07, https://angular.io/guide/styleguide#style-05-02\n      and https://angular.io/guide/styleguide#style-05-03.",category:"Best Practices",recommended:!1},schema:[{type:"object",properties:{type:{oneOf:[{type:"string"},{type:"array",items:{enum:[Ce,De]}}]},prefix:{oneOf:[{type:"string"},{type:"array"}]},style:{type:"string",enum:[T,x]}},additionalProperties:!1}],messages:{prefixFailure:"The selector should start with one of these prefixes: {{prefix}} (https://angular.io/guide/styleguide#style-02-07)",styleFailure:"The selector should be {{style}} (https://angular.io/guide/styleguide#style-05-02)",typeFailure:"The selector should be used as an {{type}} (https://angular.io/guide/styleguide#style-05-03)"}},defaultOptions:[{type:"",prefix:"",style:""}],create:(e,[{type:t,prefix:r,style:n}])=>({[he](o){const a=ae(o,"selector");if(!a)return;if(!ke(t,r,n))return;const s=Ne(a,t,le(r),n);null!==s&&(s.hasExpectedType?s.hasExpectedStyle?s.hasExpectedPrefix||Ie(a,r,e):Oe(a,n,e):Ae(a,t,e))}})}),je=r({name:"contextual-lifecycle",meta:{type:"problem",docs:{description:"Ensures that lifecycle methods are used in a correct context",category:"Possible Errors",recommended:"error"},schema:[],messages:{contextualLifecycle:"Angular will not invoke the `{{methodName}}` lifecycle method within `@{{classDecoratorName}}()` classes"}},defaultOptions:[],create(e){function t({parent:t},r){const n=t,o=D.get(r),a=se(n);for(const t of a){const n=ie(t);!n||!ne(n)||null!=o&&o.has(n)||e.report({node:t.key,messageId:"contextualLifecycle",data:{classDecoratorName:r,methodName:n}})}}return{[he](e){t(e,d.Component)},[Se](e){t(e,d.Directive)},'ClassDeclaration > Decorator[expression.callee.name="Injectable"]'(e){t(e,d.Injectable)},'ClassDeclaration > Decorator[expression.callee.name="NgModule"]'(e){t(e,d.NgModule)},[Te](e){t(e,d.Pipe)}}}}),_e=r({name:"directive-class-suffix",meta:{type:"suggestion",docs:{description:'Classes decorated with @Directive must have suffix "Directive" (or custom) in their name. See more at https://angular.io/styleguide#style-02-03',category:"Best Practices",recommended:"error"},schema:[{type:"object",properties:{suffixes:{type:"array",items:{type:"string"}}},additionalProperties:!1}],messages:{directiveClassSuffix:"Directive class names should end with one of these suffixes: {{suffixes}} (https://angular.io/styleguide#style-02-03)"}},defaultOptions:[{suffixes:["Directive"]}],create:(e,[{suffixes:t}])=>({[Se](r){if(!ae(r,"selector"))return;const n=r.parent,o=H(n),a=Q(n).some(e=>e.endsWith("Validator")),s=t.concat(a?"Validator":[]);var i;o&&s.some(e=>o.endsWith(e))||e.report({node:null!=(i=n.id)?i:n,messageId:"directiveClassSuffix",data:{suffixes:de(s)}})}})}),Be=r({name:"directive-selector",meta:{type:"suggestion",docs:{description:"Directive selectors should follow given naming rules. See more at https://angular.io/guide/styleguide#style-02-06 and https://angular.io/guide/styleguide#style-02-08.",category:"Best Practices",recommended:!1},schema:[{type:"object",properties:{type:{oneOf:[{type:"string"},{type:"array",items:{enum:[Ce,De]}}]},prefix:{oneOf:[{type:"string"},{type:"array"}]},style:{type:"string",enum:[T,x]}},additionalProperties:!1}],messages:{prefixFailure:"The selector should start with one of these prefixes: {{prefix}} (https://angular.io/guide/styleguide#style-02-08)",styleFailure:"The selector should be {{style}} (https://angular.io/guide/styleguide#style-02-06)",typeFailure:"The selector should be used as an {{type}} (https://angular.io/guide/styleguide#style-02-06)"}},defaultOptions:[{type:"",prefix:"",style:""}],create:(e,[{type:t,prefix:r,style:n}])=>({[Se](o){const a=ae(o,"selector");if(!a)return;if(!ke(t,r,n))return;const s=Ne(a,t,le(r),n);null!==s&&(s.hasExpectedType?s.hasExpectedStyle?s.hasExpectedPrefix||Ie(a,r,e):Oe(a,n,e):Ae(a,t,e))}})}),Re=r({name:"no-attribute-decorator",meta:{type:"problem",docs:{description:"Disallows usage of @Attribute decorator.",category:"Possible Errors",recommended:!1},schema:[],messages:{noAttributeDecorator:"The usage of @Attribute is considered a bad practice. Use @Input instead"}},defaultOptions:[],create:e=>({'ClassDeclaration MethodDefinition[key.name="constructor"] Decorator[expression.callee.name="Attribute"]'(t){e.report({node:t,messageId:"noAttributeDecorator"})}})});const $e=[h.DoCheck,h.OnChanges],Ke=[S.ngDoCheck,S.ngOnChanges];var Ue=r({name:"no-conflicting-lifecycle",meta:{type:"suggestion",docs:{description:"Ensures that directives not implement conflicting lifecycle interfaces.",category:"Best Practices",recommended:"error"},schema:[],messages:{noConflictingLifecycleInterface:`Implementing ${h.DoCheck} and ${h.OnChanges} in a class is not recommended`,noConflictingLifecycleMethod:`Declaring ${S.ngDoCheck} and ${S.ngOnChanges} method in a class is not recommended`}},defaultOptions:[],create:t=>({ClassDeclaration(r){(r=>{const n=Z(r);if(!$e.every(e=>n.includes(e)))return;const o=G(r).filter(t=>e.ASTUtils.isIdentifier(t.expression)&&re(t.expression.name));for(const e of o)t.report({node:e,messageId:"noConflictingLifecycleInterface"})})(r),(r=>{const n=(e=>se(e).map(ie).filter(ce).filter(ne))(r);if(!Ke.every(e=>n.includes(e)))return;const o=se(r).filter(t=>e.ASTUtils.isIdentifier(t.key)&&ne(t.key.name));for(const e of o)t.report({node:e,messageId:"noConflictingLifecycleMethod"})})(r)}})}),Le=r({name:"no-forward-ref",meta:{type:"suggestion",docs:{description:"Disallows usage of `forwardRef` references for DI",category:"Best Practices",recommended:!1},schema:[],messages:{noForwardRef:"Avoid using `forwardRef`"}},defaultOptions:[],create:e=>({'CallExpression[callee.type="Identifier"][callee.name="forwardRef"]'(t){e.report({node:t,messageId:"noForwardRef"})}})});const Ve={allowStatic:!1};var Fe=r({name:"no-host-metadata-property",meta:{type:"suggestion",docs:{description:"Disallows usage of the `host` metadata property. See more at https://angular.io/styleguide#style-06-03",category:"Best Practices",recommended:"error"},schema:[{type:"object",properties:{allowStatic:{type:"boolean",default:Ve.allowStatic}},additionalProperties:!1}],messages:{noHostMetadataProperty:`Use @${y.HostBinding} or @${y.HostListener} rather than the \`host\` metadata property (https://angular.io/styleguide#style-06-03)`}},defaultOptions:[Ve],create:(e,[{allowStatic:t}])=>({[`${ye} Property[key.name="host"]`](r){(t&&k(r.value)?r.value.properties.filter(Je):[r]).forEach(t=>{e.report({node:t,messageId:"noHostMetadataProperty"})})}})});function Je(t){return M(t)&&!function(t){return!t.computed&&(e.ASTUtils.isIdentifier(t.key)||K(t.key)&&function({0:e}){return e.toLowerCase()!==e.toUpperCase()}(t.key.value))}(t)&&!function(e){return K(e.value)&&""===e.value.value}(t)}var Xe=r({name:"no-input-prefix",meta:{type:"suggestion",docs:{description:"Input names should not be prefixed by the configured disallowed prefixes.",category:"Best Practices",recommended:!1},schema:[{type:"object",properties:{prefixes:{type:"array",items:{type:"string"}}},additionalProperties:!1}],messages:{noInputPrefix:"@Inputs should not be prefixed by {{prefixes}}"}},defaultOptions:[{prefixes:[]}],create:(t,[{prefixes:r}])=>({':matches(ClassProperty, MethodDefinition[kind="set"]) > Decorator[expression.callee.name="Input"]'(n){if(!ue(n.expression.callee,"@angular/core"))return;const o=n.parent,a=function({key:t}){if(e.ASTUtils.isIdentifier(t))return t.name;if(_(t))return t.raw;throw new Error(`Unexpected "ClassProperty.key.type" provided: ${t.type}`)}(o);r.some(e=>e===a||new RegExp(`^${e}[^a-z]`).test(a))&&t.report({node:o,messageId:"noInputPrefix",data:{prefixes:de(r)}})}})});const qe=new Set(["aria-activedescendant","aria-atomic","aria-autocomplete","aria-busy","aria-checked","aria-controls","aria-current","aria-describedby","aria-disabled","aria-dragged","aria-dropeffect","aria-expanded","aria-flowto","aria-haspopup","aria-hidden","aria-invalid","aria-label","aria-labelledby","aria-level","aria-live","aria-multiline","aria-multiselectable","aria-orientation","aria-owns","aria-posinset","aria-pressed","aria-readonly","aria-relevant","aria-required","aria-selected","aria-setsize","aria-sort","aria-valuemax","aria-valuemin","aria-valuenow","aria-valuetext"]);var Ye=r({name:"no-input-rename",meta:{type:"suggestion",docs:{description:"Disallows renaming directive inputs by providing a string to the decorator.",category:"Best Practices",recommended:"error"},schema:[{type:"object",properties:{allowedNames:{type:"array",items:{type:"string"},description:"A list with allowed input names",uniqueItems:!0}},additionalProperties:!1}],messages:{noInputRename:"@Inputs should not be aliased (https://angular.io/guide/styleguide#style-05-13)"}},defaultOptions:[{allowedNames:[]}],create:(t,[{allowedNames:r=[]}])=>({':matches(ClassProperty, MethodDefinition[kind="set"]) > Decorator[expression.callee.name="Input"]'(n){const o=n.expression;if(!ue(o.callee,"@angular/core"))return;if(0===o.arguments.length)return;let a;const s=n.parent,{decorators:i}=s.parent.parent,l=null==i?void 0:i.find(t=>O(t.expression)&&e.ASTUtils.isIdentifier(t.expression.callee)&&t.expression.callee.name===d.Directive);if(l){const e=ae(l,"selector");e&&K(e)&&(a=e.value.replace(/[[\]\s]/g,"").split(","))}const c=o.arguments[0].value;c&&e.ASTUtils.isIdentifier(s.key)&&((e,t)=>r.includes(e)||e!==t&&a&&a.some(r=>new RegExp(`^${r}((${t[0].toUpperCase()+t.slice(1)}$)|(?=$))`).test(e))||qe.has(e)&&t===e.replace(/-[a-zA-Z]/g,({1:e})=>e.toUpperCase()))(c.toString(),s.key.name)||t.report({node:s,messageId:"noInputRename"})}})}),He=r({name:"no-inputs-metadata-property",meta:{type:"suggestion",docs:{description:"Disallows usage of the `inputs` metadata property. See more at https://angular.io/styleguide#style-05-12.",category:"Best Practices",recommended:"error"},schema:[],messages:{noInputsMetadataProperty:`Use @${y.Input} rather than the \`inputs\` metadata property (https://angular.io/styleguide#style-05-12)`}},defaultOptions:[],create:e=>({[ye](t){const r=ae(t,"inputs");r&&e.report({node:r.parent,messageId:"noInputsMetadataProperty"})}})}),ze=r({name:"no-lifecycle-call",meta:{type:"suggestion",docs:{description:"Disallows explicit calls to lifecycle methods",category:"Best Practices",recommended:!1},schema:[],messages:{noLifecycleCall:"Avoid explicit calls to lifecycle methods"}},defaultOptions:[],create:t=>({[`ClassDeclaration CallExpression > MemberExpression[property.name=${me([...te])}]`]:r=>{const n=L(r,A);!n||!z(n)||function(e){return e.type===p.AST_NODE_TYPES.Super}(r.object)&&function(t){const r=L(t,U);return Boolean(r&&function({property:t},{key:r}){return e.ASTUtils.isIdentifier(t)&&e.ASTUtils.isIdentifier(r)&&t.name===r.name}(t,r))}(r)||t.report({node:r.parent,messageId:"noLifecycleCall"})}})}),We=r({name:"no-output-native",meta:{type:"suggestion",docs:{description:"Disallows naming or aliasing outputs as standard DOM event",category:"Best Practices",recommended:"error"},schema:[],messages:{noOutputNative:"Outputs should not be named or aliased as standard DOM event"}},defaultOptions:[],create(e){const t=me([...Qe()]);return{[[`ClassProperty ${xe} :matches(Literal[value=${t}], TemplateElement[value.raw=${t}])`,`ClassProperty[computed=false]:has(${xe}) > :matches(Identifier[name=${t}], Literal[value=${t}])`].join(",")](t){e.report({node:t,messageId:"noOutputNative"})}}}});let Ge=null;function Qe(){return Ge||(Ge=new Set(["abort","afterprint","animationend","animationiteration","animationstart","appinstalled","audioprocess","audioend","audiostart","beforeprint","beforeunload","beginEvent","blocked","blur","boundary","cached","canplay","canplaythrough","change","chargingchange","chargingtimechange","checking","click","close","complete","compositionend","compositionstart","compositionupdate","contextmenu","copy","cut","dblclick","devicechange","devicelight","devicemotion","deviceorientation","deviceproximity","dischargingtimechange","DOMAttributeNameChanged","DOMAttrModified","DOMCharacterDataModified","DOMContentLoaded","DOMElementNameChanged","focus","focusin","focusout","DOMNodeInserted","DOMNodeInsertedIntoDocument","DOMNodeRemoved","DOMNodeRemovedFromDocument","DOMSubtreeModified","downloading","drag","dragend","dragenter","dragleave","dragover","dragstart","drop","durationchange","emptied","end","ended","endEvent","error","fullscreenchange","fullscreenerror","gamepadconnected","gamepaddisconnected","gotpointercapture","hashchange","lostpointercapture","input","invalid","keydown","keypress","keyup","languagechange","levelchange","load","loadeddata","loadedmetadata","loadend","loadstart","mark","message","messageerror","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","nomatch","notificationclick","noupdate","obsolete","offline","online","open","orientationchange","pagehide","pageshow","paste","pause","pointercancel","pointerdown","pointerenter","pointerleave","pointerlockchange","pointerlockerror","pointermove","pointerout","pointerover","pointerup","play","playing","popstate","progress","push","pushsubscriptionchange","ratechange","readystatechange","repeatEvent","reset","resize","resourcetimingbufferfull","result","resume","scroll","seeked","seeking","select","selectstart","selectionchange","show","soundend","soundstart","speechend","speechstart","stalled","start","storage","submit","success","suspend","SVGAbort","SVGError","SVGLoad","SVGResize","SVGScroll","SVGUnload","SVGZoom","timeout","timeupdate","touchcancel","touchend","touchmove","touchstart","transitionend","unload","updateready","upgradeneeded","userproximity","voiceschanged","versionchange","visibilitychange","volumechange","waiting","wheel"]))}const Ze=/^on((?![a-z])|(?=$))/;var et=r({name:"no-output-on-prefix",meta:{type:"suggestion",docs:{description:'Ensures that Output bindings, including aliases, are not named "on", nor prefixed with it. See more at https://angular.io/guide/styleguide#style-05-16',category:"Best Practices",recommended:"error"},schema:[],messages:{noOutputOnPrefix:'Output bindings, including aliases, should not be named "on", nor prefixed with it (https://angular.io/guide/styleguide#style-05-16)'}},defaultOptions:[],create:e=>({[[`ClassProperty:has(${xe}[expression.arguments.0.value=${Ze}])`,`ClassProperty:has(${xe}):has(Identifier[name=${Ze}])`].join(",")](t){e.report({node:t,messageId:"noOutputOnPrefix"})}})}),tt=r({name:"no-output-rename",meta:{type:"suggestion",docs:{description:"Disallows renaming directive outputs by providing a string to the decorator.",category:"Best Practices",recommended:"error"},schema:[],messages:{noOutputRename:"@Outputs should not be aliased (https://angular.io/guide/styleguide#style-05-13)"}},defaultOptions:[],create:t=>({'ClassProperty > Decorator[expression.callee.name="Output"]'(r){var n;const o=r.expression;if(!ue(o.callee,"@angular/core"))return;if(0===o.arguments.length)return;let a;const s=r.parent,i=null==(n=s.parent.parent.decorators)?void 0:n.find(t=>O(t.expression)&&e.ASTUtils.isIdentifier(t.expression.callee)&&t.expression.callee.name===d.Directive);if(i){const e=ae(i,"selector");e&&K(e)&&(a=new Set(e.value.replace(/[[\]\s]/g,"").split(",")))}const l=o.arguments[0].value;l&&e.ASTUtils.isIdentifier(s.key)&&((e,t)=>!(!a||!a.has(e)||e===t))(l.toString(),s.key.name)||t.report({node:s,messageId:"noOutputRename"})}})}),rt=r({name:"no-outputs-metadata-property",meta:{type:"suggestion",docs:{description:"Disallows usage of the `outputs` metadata property. See more at https://angular.io/styleguide#style-05-12.",category:"Best Practices",recommended:"error"},schema:[],messages:{noOutputsMetadataProperty:`Use @${y.Output} rather than the \`outputs\` metadata property (https://angular.io/styleguide#style-05-12)`}},defaultOptions:[],create:e=>({[ye](t){const r=ae(t,"outputs");r&&e.report({node:r.parent,messageId:"noOutputsMetadataProperty"})}})}),nt=r({name:"no-pipe-impure",meta:{type:"suggestion",docs:{description:"Disallows the declaration of impure pipes",category:"Best Practices",recommended:!1},schema:[],messages:{noPipeImpure:"Impure pipes should be avoided because they are invoked on each change-detection cycle"}},defaultOptions:[],create:e=>({[`${Te} Property[key.name='pure'][value.value=false]`](t){e.report({node:t,messageId:"noPipeImpure"})}})}),ot=r({name:"no-queries-metadata-property",meta:{type:"suggestion",docs:{description:"Disallows usage of the `queries` metadata property. See more at https://angular.io/styleguide#style-05-12.",category:"Best Practices",recommended:!1},schema:[],messages:{noQueriesMetadataProperty:`Use @${y.Output} rather than the \`queries\` metadata property (https://angular.io/styleguide#style-05-12)`}},defaultOptions:[],create:e=>({[ye](t){const r=ae(t,"queries");r&&e.report({node:r.parent,messageId:"noQueriesMetadataProperty"})}})}),at=r({name:"no-empty-lifecycle-method",meta:{type:"suggestion",docs:{description:"Disallows declaring empty lifecycle methods",category:"Best Practices",recommended:"error",suggestion:!0},schema:[],messages:{noEmptyLifecycleMethod:"Lifecycle methods should not be empty",suggestRemoveLifecycleMethod:"Remove lifecycle method"}},defaultOptions:[],create(e){const t=e.getSourceCode();return{[`ClassDeclaration > ClassBody > MethodDefinition[key.name=${me([...te])}][value.body.body.length=0]`](r){z(r.parent.parent)&&e.report({node:r,messageId:"noEmptyLifecycleMethod",suggest:[{messageId:"suggestRemoveLifecycleMethod",fix:e=>{var n;const o=null!=(n=V(r,"@angular/core"))?n:[],a=r.key.name.replace(/^ng+/,"");return[e.remove(r),F(t,r.parent.parent,a,e),Y(t,o,a,e)].filter(ce)}}]})}}}});const st="prefer-on-push-component-change-detection";var it=r({name:st,meta:{type:"suggestion",docs:{description:"Enforces component's change detection to ChangeDetectionStrategy.OnPush.",category:"Best Practices",recommended:!1},schema:[],messages:{preferOnPushComponentChangeDetection:"The changeDetection value of a component should be set to ChangeDetectionStrategy.OnPush"}},defaultOptions:[],create:t=>({[he](r){const n=ae(r,"changeDetection");n?e.ASTUtils.isIdentifier(n.property)&&"OnPush"===n.property.name||t.report({node:n,messageId:"preferOnPushComponentChangeDetection"}):t.report({node:r,messageId:"preferOnPushComponentChangeDetection"})}})}),lt=r({name:"prefer-output-readonly",meta:{type:"suggestion",docs:{description:"Prefer to declare `@Output` as readonly since they are not supposed to be reassigned",category:"Best Practices",recommended:!1,suggestion:!0},schema:[],messages:{preferOutputReadonly:"Prefer to declare `@Output` as readonly since they are not supposed to be reassigned",suggestAddReadonlyModifier:"Add readonly modifier"}},defaultOptions:[],create:e=>({'ClassProperty[readonly=undefined] > Decorator[expression.callee.name="Output"]'({parent:{key:t}}){e.report({node:t,messageId:"preferOutputReadonly",suggest:[{messageId:"suggestAddReadonlyModifier",fix:e=>e.insertTextBefore(t,"readonly ")}]})}})});const ct=/^\.\.?\/.+/;var pt=r({name:"relative-url-prefix",meta:{type:"suggestion",docs:{description:"The ./ and ../ prefix is standard syntax for relative URLs; don't depend on Angular's current ability to do without that prefix. See more at https://angular.io/styleguide#style-05-04",category:"Best Practices",recommended:!1},schema:[],messages:{relativeUrlPrefix:"The ./ and ../ prefix is standard syntax for relative URLs. (https://angular.io/styleguide#style-05-04)"}},defaultOptions:[],create:e=>({[`${he} Property[key.name='templateUrl']`]({value:t}){ut(t)&&e.report({node:t,messageId:"relativeUrlPrefix"})},[`${he} Property[key.name='styleUrls']`]({value:t}){N(t)&&t.elements.filter(ut).forEach(t=>{e.report({node:t,messageId:"relativeUrlPrefix"})})}})});function ut(e){return!K(e)||!ct.test(e.value)}const dt=["bootstrap","declarations","entryComponents","exports","imports","providers","schemas"];var mt=r({name:"sort-ngmodule-metadata-arrays",meta:{type:"suggestion",docs:{description:"Enforces ASC alphabetical order for NgModule metadata arrays for easy visual scanning",category:"Best Practices",recommended:!1},fixable:"code",schema:[],messages:{sortNgmoduleMetadataArrays:"NgModule metadata arrays should be sorted in ASC alphabetical order"}},defaultOptions:[],create:t=>({'ClassDeclaration > Decorator[expression.callee.name="NgModule"]'(r){dt.forEach(n=>{const o=ae(r,n);if(!o||!N(o)||o.elements.length<2)return;const a=o.elements.filter(e.ASTUtils.isIdentifier).map((e,t,r)=>[e,r[t+1]]).find(([e,t])=>t&&1===e.name.localeCompare(t.name));if(!a)return;const[s,i]=a;t.report({messageId:"sortNgmoduleMetadataArrays",node:s,fix:e=>[e.replaceText(s,i.name),e.replaceText(i,s.name)]})})}})}),ft=r({name:"use-component-selector",meta:{type:"suggestion",docs:{description:"Component selector must be declared",category:"Best Practices",recommended:!1},schema:[],messages:{useComponentSelector:"The selector of the component is mandatory"}},defaultOptions:[],create:e=>({[he](t){const r=ae(t,"selector");r&&K(r)&&r.value.length||e.report({node:t,messageId:"useComponentSelector"})}})}),gt=r({name:"use-component-view-encapsulation",meta:{type:"suggestion",docs:{description:"Disallows using `ViewEncapsulation.None`",category:"Best Practices",recommended:!1},schema:[],messages:{useComponentViewEncapsulation:"Using `ViewEncapsulation.None` makes your styles global, which may have an unintended effect",suggestRemoveViewEncapsulationNone:"Remove `ViewEncapsulation.None`"}},defaultOptions:[],create(e){const t=e.getSourceCode();return{[`${he} Property[key.name='encapsulation'] > MemberExpression[object.name='ViewEncapsulation'] > Identifier[name='None']`](r){e.report({node:r,messageId:"useComponentViewEncapsulation",suggest:[{messageId:"suggestRemoveViewEncapsulationNone",fix:e=>{var n;const o=null!=(n=V(r,"@angular/core"))?n:[];return[J(t,r.parent.parent,e),Y(t,o,"ViewEncapsulation",e)].filter(ce)}}]})}}}}),yt=r({name:"use-injectable-provided-in",meta:{type:"suggestion",docs:{description:`"Using the 'providedIn' property makes classes decorated with @${d.Injectable} tree shakeable`,category:"Best Practices",recommended:!1},schema:[],messages:{useInjectableProvidedIn:`Classes decorated with @${d.Injectable} should use the 'providedIn' property`}},defaultOptions:[],create:e=>({'ClassDeclaration > Decorator[expression.callee.name="Injectable"]'(t){ae(t,"providedIn")||e.report({node:t,messageId:"useInjectableProvidedIn"})}})}),ht=r({name:"use-lifecycle-interface",meta:{type:"suggestion",docs:{description:"Ensures that classes implement lifecycle interfaces corresponding to the declared lifecycle methods. See more at https://angular.io/styleguide#style-09-01",category:"Best Practices",recommended:"warn"},schema:[],messages:{useLifecycleInterface:"Lifecycle interface '{{interfaceName}}' should be implemented for method '{{methodName}}'. (https://angular.io/styleguide#style-09-01)"}},defaultOptions:[],create:e=>({[`MethodDefinition[key.name=${me([...te])}]`]({key:t,parent:{parent:r}}){if(!z(r))return;const n=Z(r),o=t.name,a=(e=>e.slice(2))(o);n.includes(h[a])||e.report({node:t,messageId:"useLifecycleInterface",data:{interfaceName:a,methodName:o}})}})}),St=r({name:"use-pipe-transform-interface",meta:{type:"suggestion",docs:{description:"Ensures that Pipes implement `PipeTransform` interface",category:"Best Practices",recommended:"error"},fixable:"code",schema:[],messages:{usePipeTransformInterface:"Pipes should implement `PipeTransform` interface"}},defaultOptions:[],create:e=>({[Te]({parent:t}){var r;Q(t).find(e=>"PipeTransform"===e)||e.report({node:null!=(r=t.id)?r:t,messageId:"usePipeTransformInterface",fix:e=>{const{implementsNodeReplace:r,implementsTextReplace:n}=function({id:e,implements:t},r){const[n,o]=t?[X(t),`, ${r}`]:[e,` implements ${r}`];return{implementsNodeReplace:n,implementsTextReplace:o}}(t,"PipeTransform");return[q(t,"@angular/core","PipeTransform",e),e.insertTextAfter(r,n)]}})}})}),Tt=r({name:"pipe-prefix",meta:{type:"suggestion",docs:{description:"Enforce consistent prefix for pipes.",category:"Stylistic Issues",recommended:!1},schema:[{type:"object",properties:{prefixes:{type:"array",items:{type:"string"},minimum:1,uniqueItems:!0}},additionalProperties:!1}],messages:{pipePrefix:"@Pipes should be prefixed by {{prefixes}}"}},defaultOptions:[{prefixes:[]}],create:(e,[{prefixes:t}])=>({[Te](r){const n=ae(r,"name");if(!n)return;if(!function(e){return Array.isArray(e)&&e.length>0}(t))return;const o=t.join("|"),a=pe.prefix(o,"camelCase");let s;K(n)?s=n.value:B(n)&&n.quasis[0]&&(s=n.quasis[0].value.raw),s&&(a.apply(this,[s])||e.report({node:n,messageId:"pipePrefix",data:{prefixes:de(t)}}))}})});module.exports={configs:{all:{extends:"./configs/base.json",rules:{"@angular-eslint/component-class-suffix":"error","@angular-eslint/component-max-inline-declarations":"error","@angular-eslint/component-selector":"error","@angular-eslint/contextual-decorator":"error","@angular-eslint/contextual-lifecycle":"error","@angular-eslint/directive-class-suffix":"error","@angular-eslint/directive-selector":"error","@angular-eslint/no-attribute-decorator":"error","@angular-eslint/no-conflicting-lifecycle":"error","@angular-eslint/no-empty-lifecycle-method":"error","@angular-eslint/no-forward-ref":"error","@angular-eslint/no-host-metadata-property":"error","@angular-eslint/no-input-prefix":"error","@angular-eslint/no-input-rename":"error","@angular-eslint/no-inputs-metadata-property":"error","@angular-eslint/no-lifecycle-call":"error","@angular-eslint/no-output-native":"error","@angular-eslint/no-output-on-prefix":"error","@angular-eslint/no-output-rename":"error","@angular-eslint/no-outputs-metadata-property":"error","@angular-eslint/no-pipe-impure":"error","@angular-eslint/no-queries-metadata-property":"error","@angular-eslint/pipe-prefix":"error","@angular-eslint/prefer-on-push-component-change-detection":"error","@angular-eslint/prefer-output-readonly":"error","@angular-eslint/relative-url-prefix":"error","@angular-eslint/sort-ngmodule-metadata-arrays":"error","@angular-eslint/use-component-selector":"error","@angular-eslint/use-component-view-encapsulation":"error","@angular-eslint/use-injectable-provided-in":"error","@angular-eslint/use-lifecycle-interface":"error","@angular-eslint/use-pipe-transform-interface":"error"}},base:{parser:"@typescript-eslint/parser",parserOptions:{ecmaVersion:2020,sourceType:"module",project:"./tsconfig.json"},plugins:["@typescript-eslint","@angular-eslint"]},recommended:{extends:"./configs/base.json",rules:{"@angular-eslint/component-class-suffix":"error","@angular-eslint/contextual-lifecycle":"error","@angular-eslint/directive-class-suffix":"error","@angular-eslint/no-conflicting-lifecycle":"error","@angular-eslint/no-empty-lifecycle-method":"error","@angular-eslint/no-host-metadata-property":"error","@angular-eslint/no-input-rename":"error","@angular-eslint/no-inputs-metadata-property":"error","@angular-eslint/no-output-native":"error","@angular-eslint/no-output-on-prefix":"error","@angular-eslint/no-output-rename":"error","@angular-eslint/no-outputs-metadata-property":"error","@angular-eslint/use-lifecycle-interface":"warn","@angular-eslint/use-pipe-transform-interface":"error"}},"recommended--extra":{extends:"./configs/base.json",rules:{"no-restricted-imports":["error",{paths:[{name:"rxjs/Rx",message:"Please import directly from 'rxjs' instead"}]}],"@typescript-eslint/member-ordering":["error",{default:["static-field","instance-field","static-method","instance-method"]}],"no-restricted-syntax":["error",{selector:'CallExpression[callee.object.name="console"][callee.property.name=/^(debug|info|time|timeEnd|trace)$/]',message:"Unexpected property on console object was called"}],"@typescript-eslint/no-inferrable-types":["error",{ignoreParameters:!0}],"@typescript-eslint/no-non-null-assertion":"error","no-fallthrough":"error"}},"ng-cli-compat":{extends:["./configs/base.json"],env:{browser:!0,es6:!0,node:!0},plugins:["eslint-plugin-import","eslint-plugin-jsdoc","eslint-plugin-prefer-arrow"],rules:{"@typescript-eslint/interface-name-prefix":"off","@typescript-eslint/explicit-member-accessibility":"off","sort-keys":"off","@angular-eslint/component-class-suffix":"error","@angular-eslint/component-selector":["error",{type:"element",prefix:"app",style:"kebab-case"}],"@angular-eslint/contextual-lifecycle":"error","@angular-eslint/directive-class-suffix":"error","@angular-eslint/directive-selector":["error",{type:"attribute",prefix:"app",style:"camelCase"}],"@angular-eslint/no-conflicting-lifecycle":"error","@angular-eslint/no-host-metadata-property":"error","@angular-eslint/no-input-rename":"error","@angular-eslint/no-inputs-metadata-property":"error","@angular-eslint/no-output-native":"error","@angular-eslint/no-output-on-prefix":"error","@angular-eslint/no-output-rename":"error","@angular-eslint/no-outputs-metadata-property":"error","@angular-eslint/use-lifecycle-interface":"error","@angular-eslint/use-pipe-transform-interface":"error","@typescript-eslint/adjacent-overload-signatures":"error","@typescript-eslint/array-type":"off","@typescript-eslint/ban-types":["error",{types:{Object:{message:"Avoid using the `Object` type. Did you mean `object`?"},Function:{message:"Avoid using the `Function` type. Prefer a specific function type, like `() => void`."},Boolean:{message:"Avoid using the `Boolean` type. Did you mean `boolean`?"},Number:{message:"Avoid using the `Number` type. Did you mean `number`?"},String:{message:"Avoid using the `String` type. Did you mean `string`?"},Symbol:{message:"Avoid using the `Symbol` type. Did you mean `symbol`?"}}}],"@typescript-eslint/consistent-type-assertions":"error","@typescript-eslint/dot-notation":"error","@typescript-eslint/member-ordering":"error","@typescript-eslint/naming-convention":"error","@typescript-eslint/no-empty-function":"off","@typescript-eslint/no-empty-interface":"error","@typescript-eslint/no-explicit-any":"off","@typescript-eslint/no-inferrable-types":["error",{ignoreParameters:!0}],"@typescript-eslint/no-misused-new":"error","@typescript-eslint/no-namespace":"error","@typescript-eslint/no-non-null-assertion":"error","@typescript-eslint/no-parameter-properties":"off","@typescript-eslint/no-unused-expressions":"error","@typescript-eslint/no-use-before-define":"off","@typescript-eslint/no-var-requires":"off","@typescript-eslint/prefer-for-of":"error","@typescript-eslint/prefer-function-type":"error","@typescript-eslint/prefer-namespace-keyword":"error","@typescript-eslint/triple-slash-reference":["error",{path:"always",types:"prefer-import",lib:"always"}],"@typescript-eslint/unified-signatures":"error",complexity:"off","constructor-super":"error",eqeqeq:["error","smart"],"guard-for-in":"error","id-blacklist":["error","any","Number","number","String","string","Boolean","boolean","Undefined","undefined"],"id-match":"error","import/no-deprecated":"warn","jsdoc/newline-after-description":"error","jsdoc/no-types":"error","max-classes-per-file":"off","no-bitwise":"error","no-caller":"error","no-cond-assign":"error","no-console":["error",{allow:["log","warn","dir","timeLog","assert","clear","count","countReset","group","groupEnd","table","dirxml","error","groupCollapsed","Console","profile","profileEnd","timeStamp","context"]}],"no-debugger":"error","no-empty":"off","no-eval":"error","no-fallthrough":"error","no-invalid-this":"off","no-new-wrappers":"error","no-restricted-imports":["error",{name:"rxjs/Rx",message:"Please import directly from 'rxjs' instead"}],"@typescript-eslint/no-shadow":["error",{hoist:"all"}],"no-throw-literal":"error","no-undef-init":"error","no-underscore-dangle":"error","no-unsafe-finally":"error","no-unused-labels":"error","no-var":"error","object-shorthand":"error","one-var":["error","never"],"prefer-arrow/prefer-arrow-functions":"error","prefer-const":"error",radix:"error","use-isnan":"error","valid-typeof":"off"}},"ng-cli-compat--formatting-add-on":{plugins:["eslint-plugin-jsdoc"],rules:{"arrow-body-style":"error","arrow-parens":"off","comma-dangle":"off",curly:"error","eol-last":"error","jsdoc/check-alignment":"error","max-len":["error",{code:140}],"new-parens":"error","no-multiple-empty-lines":"off","no-trailing-spaces":"error","quote-props":["error","as-needed"],"space-before-function-paren":["error",{anonymous:"never",asyncArrow:"always",named:"never"}],"@typescript-eslint/member-delimiter-style":["error",{multiline:{delimiter:"semi",requireLast:!0},singleline:{delimiter:"semi",requireLast:!1}}],quotes:"off","@typescript-eslint/quotes":["error","single",{allowTemplateLiterals:!0}],"@typescript-eslint/semi":["error","always"],"@typescript-eslint/type-annotation-spacing":"error"}}},rules:{"contextual-decorator":fe,"component-class-suffix":ve,"component-max-inline-declarations":Ee,"component-selector":Me,"contextual-lifecycle":je,"directive-class-suffix":_e,"directive-selector":Be,"no-attribute-decorator":Re,"no-conflicting-lifecycle":Ue,"no-forward-ref":Le,"no-host-metadata-property":Fe,"no-input-prefix":Xe,"no-input-rename":Ye,"no-inputs-metadata-property":He,"no-lifecycle-call":ze,"no-output-native":We,"no-output-on-prefix":et,"no-output-rename":tt,"no-outputs-metadata-property":rt,"no-pipe-impure":nt,"no-queries-metadata-property":ot,"no-empty-lifecycle-method":at,[st]:it,"prefer-output-readonly":lt,"relative-url-prefix":pt,"sort-ngmodule-metadata-arrays":mt,"use-component-selector":ft,"use-component-view-encapsulation":gt,"use-injectable-provided-in":yt,"use-lifecycle-interface":ht,"use-pipe-transform-interface":St,"pipe-prefix":Tt}};
