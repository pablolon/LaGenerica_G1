{"ast":null,"code":"import { BehaviorSubject, combineLatest, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/modules/admin/ui/icons/icons.service\";\nimport * as i2 from \"@angular/material/icon\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@fuse/components/highlight/highlight.component\";\n\nfunction IconsComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const icons_r3 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(icons_r3.name);\n  }\n}\n\nfunction IconsComponent_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"textarea\", 20);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"code\", \"<mat-icon svgIcon=\\\"\" + ctx_r1.calcSvgIconAttr() + \"\\\"></mat-icon>\");\n  }\n}\n\nfunction IconsComponent_ng_container_47_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 22);\n    i0.ɵɵlistener(\"click\", function IconsComponent_ng_container_47_ng_container_1_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const icon_r7 = restoredCtx.$implicit;\n      const icons_r5 = i0.ɵɵnextContext().ngIf;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.selectIcon(icons_r5.namespace, icon_r7);\n    });\n    i0.ɵɵelementStart(2, \"div\", 23);\n    i0.ɵɵelement(3, \"mat-icon\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 25);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const icon_r7 = ctx.$implicit;\n    const icons_r5 = i0.ɵɵnextContext().ngIf;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"border-primary\", ctx_r6.selectedIcon[1] === icon_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", \"icon-size-\" + ctx_r6.iconSize)(\"svgIcon\", icons_r5.namespace + \":\" + icon_r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(icon_r7);\n  }\n}\n\nfunction IconsComponent_ng_container_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, IconsComponent_ng_container_47_ng_container_1_Template, 6, 5, \"ng-container\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const icons_r5 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", icons_r5.list);\n  }\n}\n\nexport class IconsComponent {\n  /**\n   * Constructor\n   */\n  constructor(_iconsService) {\n    this._iconsService = _iconsService;\n    this.filterValue$ = new BehaviorSubject('');\n    this.iconSize = 24;\n    this._unsubscribeAll = new Subject();\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n\n\n  ngOnInit() {\n    // Get the icons\n    this.icons$ = this._iconsService.icons; // Subscribe to icons\n\n    this._iconsService.icons.pipe(takeUntil(this._unsubscribeAll)).subscribe(icons => {\n      // Set the icon size in case the icon set\n      // has a special base grid size\n      this.iconSize = icons.grid; // Select the first icon\n\n      this.selectedIcon = [icons.namespace, icons.list[0]];\n    }); // Create filtered icons\n\n\n    this.filteredIcons$ = combineLatest([this.icons$, this.filterValue$]).pipe(map(([icons, filterValue]) => {\n      // Filter the icons\n      const filteredIcons = icons.list.filter(icon => icon.toLowerCase().includes(filterValue.toLowerCase())); // Update the list with the filtered icons\n\n      return Object.assign(Object.assign({}, icons), {\n        list: filteredIcons\n      });\n    }));\n  }\n  /**\n   * On destroy\n   */\n\n\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n\n    this._unsubscribeAll.complete();\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Filter icons\n   *\n   * @param event\n   */\n\n\n  filterIcons(event) {\n    // Push the value to the observable\n    this.filterValue$.next(event.target.value);\n  }\n  /**\n   * Select an icon\n   *\n   * @param namespace\n   * @param icon\n   */\n\n\n  selectIcon(namespace, icon) {\n    this.selectedIcon = [namespace, icon];\n  }\n  /**\n   * Returns the selected icon's svgIcon\n   * to use in mat-icon component\n   */\n\n\n  calcSvgIconAttr() {\n    if (!this.selectedIcon) {\n      return '';\n    }\n\n    if (this.selectedIcon[0] === '') {\n      return this.selectedIcon[1];\n    }\n\n    return this.selectedIcon.join(':');\n  }\n\n}\n\nIconsComponent.ɵfac = function IconsComponent_Factory(t) {\n  return new (t || IconsComponent)(i0.ɵɵdirectiveInject(i1.IconsService));\n};\n\nIconsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: IconsComponent,\n  selectors: [[\"icons\"]],\n  decls: 49,\n  vars: 19,\n  consts: [[1, \"flex\", \"flex-col\", \"flex-auto\", \"min-w-0\"], [1, \"flex\", \"flex-col\", \"sm:flex-row\", \"flex-0\", \"sm:items-center\", \"sm:justify-between\", \"p-6\", \"sm:py-8\", \"sm:px-10\", \"border-b\", \"bg-card\", \"dark:bg-transparent\"], [1, \"flex-1\", \"min-w-0\"], [1, \"flex\", \"flex-wrap\", \"items-center\", \"font-medium\"], [1, \"whitespace-nowrap\", \"text-primary-500\"], [1, \"flex\", \"items-center\", \"ml-1\", \"whitespace-nowrap\"], [1, \"icon-size-5\", \"text-secondary\", 3, \"svgIcon\"], [1, \"ml-1\", \"text-primary-500\"], [1, \"mt-2\"], [1, \"text-3xl\", \"md:text-4xl\", \"font-extrabold\", \"tracking-tight\", \"leading-7\", \"sm:leading-10\", \"truncate\"], [4, \"ngIf\"], [1, \"flex-auto\", \"p-6\", \"sm:p-10\"], [1, \"prose\", \"prose-sm\", \"max-w-5xl\"], [1, \"flex\", \"my-6\", \"xs:flex-col\"], [1, \"flex-auto\"], [\"matInput\", \"\", 3, \"input\"], [1, \"min-w-40\", \"ml-8\", \"xs:ml-0\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [1, \"flex\", \"flex-wrap\", \"-mx-4\"], [\"fuse-highlight\", \"\", \"lang\", \"html\", 3, \"code\"], [4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"flex-col\", \"items-center\", \"justify-center\", \"m-4\", \"p-4\", \"min-w-36\", \"max-w-36\", \"min-h-30\", \"max-h-30\", \"rounded\", \"border-2\", \"cursor-pointer\", \"bg-card\", 3, \"click\"], [1, \"flex\", \"items-center\", \"justify-center\", \"mb-3\"], [3, \"ngClass\", \"svgIcon\"], [1, \"text-sm\", \"text-center\", \"break-all\", \"text-secondary\"]],\n  template: function IconsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵelementStart(5, \"a\", 4);\n      i0.ɵɵtext(6, \"User Interface\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵelement(8, \"mat-icon\", 6);\n      i0.ɵɵelementStart(9, \"a\", 7);\n      i0.ɵɵtext(10, \"Icons\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵelementStart(12, \"h2\", 9);\n      i0.ɵɵtemplate(13, IconsComponent_ng_container_13_Template, 3, 1, \"ng-container\", 10);\n      i0.ɵɵpipe(14, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 11);\n      i0.ɵɵelementStart(16, \"div\", 12);\n      i0.ɵɵelementStart(17, \"h2\");\n      i0.ɵɵtext(18, \"Usage\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, IconsComponent_ng_container_19_Template, 2, 1, \"ng-container\", 10);\n      i0.ɵɵpipe(20, \"async\");\n      i0.ɵɵelementStart(21, \"h2\");\n      i0.ɵɵtext(22, \"Icons\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 13);\n      i0.ɵɵelementStart(24, \"mat-form-field\", 14);\n      i0.ɵɵelementStart(25, \"mat-label\");\n      i0.ɵɵtext(26, \"Search an icon\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 15);\n      i0.ɵɵlistener(\"input\", function IconsComponent_Template_input_input_27_listener($event) {\n        return ctx.filterIcons($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"mat-form-field\", 16);\n      i0.ɵɵelementStart(29, \"mat-label\");\n      i0.ɵɵtext(30, \"Icon size\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"mat-select\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function IconsComponent_Template_mat_select_ngModelChange_31_listener($event) {\n        return ctx.iconSize = $event;\n      });\n      i0.ɵɵelementStart(32, \"mat-option\", 18);\n      i0.ɵɵtext(33, \"16\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"mat-option\", 18);\n      i0.ɵɵtext(35, \"20\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"mat-option\", 18);\n      i0.ɵɵtext(37, \"24\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"mat-option\", 18);\n      i0.ɵɵtext(39, \"32\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"mat-option\", 18);\n      i0.ɵɵtext(41, \"40\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"mat-option\", 18);\n      i0.ɵɵtext(43, \"48\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"mat-option\", 18);\n      i0.ɵɵtext(45, \"64\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\", 19);\n      i0.ɵɵtemplate(47, IconsComponent_ng_container_47_Template, 2, 1, \"ng-container\", 10);\n      i0.ɵɵpipe(48, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:chevron-right\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(14, 13, ctx.icons$));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(20, 15, ctx.filteredIcons$));\n      i0.ɵɵadvance(8);\n      i0.ɵɵattribute(\"autocomplete\", \"off\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.iconSize);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", 4);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", 5);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", 6);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", 8);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", 10);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", 12);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", 16);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(48, 17, ctx.filteredIcons$));\n    }\n  },\n  directives: [i2.MatIcon, i3.NgIf, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.MatSelect, i7.NgControlStatus, i7.NgModel, i8.MatOption, i9.FuseHighlightComponent, i3.NgForOf, i3.NgClass],\n  pipes: [i3.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/Users/pablolondono/Library/Mobile Documents/com~apple~CloudDocs/Documents/MinTic/Ciclo 4/Programación/SpringAngular/Fronts/Templates Angular/Fuse_Demo/src/app/modules/admin/ui/icons/icons.component.ts","/Users/pablolondono/Library/Mobile Documents/com~apple~CloudDocs/Documents/MinTic/Ciclo 4/Programación/SpringAngular/Fronts/Templates Angular/Fuse_Demo/src/app/modules/admin/ui/icons/icons.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { IconsService } from 'app/modules/admin/ui/icons/icons.service';\nimport { Icon } from 'app/modules/admin/ui/icons/icons.types';\n\n@Component({\n    selector     : 'icons',\n    templateUrl  : './icons.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class IconsComponent implements OnInit, OnDestroy\n{\n    icons$: Observable<Icon>;\n    filteredIcons$: Observable<Icon>;\n    filterValue$: BehaviorSubject<string> = new BehaviorSubject('');\n\n    iconSize: number = 24;\n    selectedIcon: string[];\n    private _unsubscribeAll: Subject<any> = new Subject();\n\n    /**\n     * Constructor\n     */\n    constructor(private _iconsService: IconsService)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the icons\n        this.icons$ = this._iconsService.icons;\n\n        // Subscribe to icons\n        this._iconsService.icons\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((icons) => {\n\n                // Set the icon size in case the icon set\n                // has a special base grid size\n                this.iconSize = icons.grid;\n\n                // Select the first icon\n                this.selectedIcon = [icons.namespace, icons.list[0]];\n            });\n\n        // Create filtered icons\n        this.filteredIcons$ = combineLatest([this.icons$, this.filterValue$])\n            .pipe(\n                map(([icons, filterValue]) => {\n\n                    // Filter the icons\n                    const filteredIcons = icons.list.filter(icon => icon.toLowerCase().includes(filterValue.toLowerCase()));\n\n                    // Update the list with the filtered icons\n                    return {\n                        ...icons,\n                        list: filteredIcons\n                    };\n                })\n            );\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Filter icons\n     *\n     * @param event\n     */\n    filterIcons(event: any): void\n    {\n        // Push the value to the observable\n        this.filterValue$.next(event.target.value);\n    }\n\n    /**\n     * Select an icon\n     *\n     * @param namespace\n     * @param icon\n     */\n    selectIcon(namespace: string, icon: string): void\n    {\n        this.selectedIcon = [\n            namespace,\n            icon\n        ];\n    }\n\n    /**\n     * Returns the selected icon's svgIcon\n     * to use in mat-icon component\n     */\n    calcSvgIconAttr(): string\n    {\n        if ( !this.selectedIcon )\n        {\n            return '';\n        }\n\n        if ( this.selectedIcon[0] === '' )\n        {\n            return this.selectedIcon[1];\n        }\n\n        return this.selectedIcon.join(':');\n    }\n}\n","<div class=\"flex flex-col flex-auto min-w-0\">\n\n    <!-- Header -->\n    <div class=\"flex flex-col sm:flex-row flex-0 sm:items-center sm:justify-between p-6 sm:py-8 sm:px-10 border-b bg-card dark:bg-transparent\">\n        <div class=\"flex-1 min-w-0\">\n            <!-- Breadcrumbs -->\n            <div class=\"flex flex-wrap items-center font-medium\">\n                <div>\n                    <a class=\"whitespace-nowrap text-primary-500\">User Interface</a>\n                </div>\n                <div class=\"flex items-center ml-1 whitespace-nowrap\">\n                    <mat-icon\n                        class=\"icon-size-5 text-secondary\"\n                        [svgIcon]=\"'heroicons_solid:chevron-right'\"></mat-icon>\n                    <a class=\"ml-1 text-primary-500\">Icons</a>\n                </div>\n            </div>\n            <!-- Title -->\n            <div class=\"mt-2\">\n                <h2 class=\"text-3xl md:text-4xl font-extrabold tracking-tight leading-7 sm:leading-10 truncate\">\n                    <ng-container *ngIf=\"(icons$ | async) as icons\">\n                        <h1>{{icons.name}}</h1>\n                    </ng-container>\n                </h2>\n            </div>\n        </div>\n    </div>\n\n    <!-- Main -->\n    <div class=\"flex-auto p-6 sm:p-10\">\n\n        <div class=\"prose prose-sm max-w-5xl\">\n\n            <h2>Usage</h2>\n            <ng-container *ngIf=\"(filteredIcons$ | async) as icons\">\n                <textarea\n                    fuse-highlight\n                    lang=\"html\"\n                    [code]=\"'<mat-icon svgIcon=&#34;' + calcSvgIconAttr() + '&#34;></mat-icon>'\"></textarea>\n            </ng-container>\n\n            <h2>Icons</h2>\n            <div class=\"flex my-6 xs:flex-col\">\n                <mat-form-field class=\"flex-auto\">\n                    <mat-label>Search an icon</mat-label>\n                    <input\n                        matInput\n                        [attr.autocomplete]=\"'off'\"\n                        (input)=\"filterIcons($event)\">\n                </mat-form-field>\n                <mat-form-field class=\"min-w-40 ml-8 xs:ml-0\">\n                    <mat-label>Icon size</mat-label>\n                    <mat-select [(ngModel)]=\"iconSize\">\n                        <mat-option [value]=\"4\">16</mat-option>\n                        <mat-option [value]=\"5\">20</mat-option>\n                        <mat-option [value]=\"6\">24</mat-option>\n                        <mat-option [value]=\"8\">32</mat-option>\n                        <mat-option [value]=\"10\">40</mat-option>\n                        <mat-option [value]=\"12\">48</mat-option>\n                        <mat-option [value]=\"16\">64</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n            <div class=\"flex flex-wrap -mx-4\">\n\n                <ng-container *ngIf=\"(filteredIcons$ | async) as icons\">\n\n                    <ng-container *ngFor=\"let icon of icons.list\">\n\n                        <div\n                            class=\"flex flex-col items-center justify-center m-4 p-4 min-w-36 max-w-36 min-h-30 max-h-30 rounded border-2 cursor-pointer bg-card\"\n                            [class.border-primary]=\"selectedIcon[1] === icon\"\n                            (click)=\"selectIcon(icons.namespace, icon)\">\n\n                            <div class=\"flex items-center justify-center mb-3\">\n                                <mat-icon\n                                    [ngClass]=\"'icon-size-' + iconSize\"\n                                    [svgIcon]=\"icons.namespace + ':' + icon\"></mat-icon>\n                            </div>\n\n                            <div class=\"text-sm text-center break-all text-secondary\">{{icon}}</div>\n\n                        </div>\n\n                    </ng-container>\n\n                </ng-container>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}