{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { debounceTime, map, switchMap, takeUntil } from 'rxjs/operators';\nimport { of, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/modules/admin/apps/notes/notes.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/checkbox\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/menu\";\n\nfunction NotesDetailsComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"div\", 7);\n    i0.ɵɵelementStart(3, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function NotesDetailsComponent_ng_container_1_ng_container_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const note_r1 = i0.ɵɵnextContext().ngIf;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.removeImage(note_r1);\n    });\n    i0.ɵɵelement(4, \"mat-icon\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"img\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const note_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:trash\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", note_r1.image, i0.ɵɵsanitizeUrl);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"text-secondary line-through\": a0\n  };\n};\n\nfunction NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 17);\n    i0.ɵɵelementStart(2, \"mat-checkbox\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template_mat_checkbox_ngModelChange_2_listener($event) {\n      const task_r13 = ctx.$implicit;\n      return task_r13.completed = $event;\n    })(\"change\", function NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template_mat_checkbox_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const task_r13 = restoredCtx.$implicit;\n      const note_r1 = i0.ɵɵnextContext(2).ngIf;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.updateTaskOnNote(note_r1, task_r13);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template_input_ngModelChange_3_listener($event) {\n      const task_r13 = ctx.$implicit;\n      return task_r13.content = $event;\n    })(\"input\", function NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template_input_input_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const task_r13 = restoredCtx.$implicit;\n      const note_r1 = i0.ɵɵnextContext(2).ngIf;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.updateTaskOnNote(note_r1, task_r13);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-icon\", 20);\n    i0.ɵɵlistener(\"click\", function NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template_mat_icon_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const task_r13 = restoredCtx.$implicit;\n      const note_r1 = i0.ɵɵnextContext(2).ngIf;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.removeTaskFromNote(note_r1, task_r13);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const task_r13 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"color\", \"primary\")(\"ngModel\", task_r13.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, task_r13.completed))(\"placeholder\", \"Task\")(\"ngModel\", task_r13.content);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:x\");\n  }\n}\n\nfunction NotesDetailsComponent_ng_container_1_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵtemplate(2, NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template, 5, 8, \"ng-container\", 12);\n    i0.ɵɵelementStart(3, \"div\", 13);\n    i0.ɵɵelement(4, \"mat-icon\", 14);\n    i0.ɵɵelementStart(5, \"input\", 15, 16);\n    i0.ɵɵlistener(\"keydown.enter\", function NotesDetailsComponent_ng_container_1_ng_container_7_Template_input_keydown_enter_5_listener() {\n      i0.ɵɵrestoreView(_r25);\n\n      const _r12 = i0.ɵɵreference(6);\n\n      const note_r1 = i0.ɵɵnextContext().ngIf;\n      const ctx_r23 = i0.ɵɵnextContext();\n      ctx_r23.addTaskToNote(note_r1, _r12.value);\n      return _r12.value = \"\";\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const note_r1 = i0.ɵɵnextContext().ngIf;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", note_r1.tasks)(\"ngForTrackBy\", ctx_r3.trackByFn);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:plus\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", \"Add task\");\n  }\n}\n\nfunction NotesDetailsComponent_ng_container_1_ng_container_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 22);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-icon\", 23);\n    i0.ɵɵlistener(\"click\", function NotesDetailsComponent_ng_container_1_ng_container_8_ng_container_2_Template_mat_icon_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const label_r28 = restoredCtx.$implicit;\n      const note_r1 = i0.ɵɵnextContext(2).ngIf;\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.toggleLabelOnNote(note_r1, label_r28);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const label_r28 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", label_r28.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:x-circle\");\n  }\n}\n\nfunction NotesDetailsComponent_ng_container_1_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵtemplate(2, NotesDetailsComponent_ng_container_1_ng_container_8_ng_container_2_Template, 5, 2, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const note_r1 = i0.ɵɵnextContext().ngIf;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", note_r1.labels)(\"ngForTrackBy\", ctx_r4.trackByFn);\n  }\n}\n\nfunction NotesDetailsComponent_ng_container_1_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 24);\n    i0.ɵɵelementStart(2, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function NotesDetailsComponent_ng_container_1_ng_container_9_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const note_r1 = i0.ɵɵnextContext().ngIf;\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.createNote(note_r1);\n    });\n    i0.ɵɵtext(3, \" Save \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const note_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"color\", \"primary\")(\"disabled\", !note_r1.title && !note_r1.content);\n  }\n}\n\nfunction NotesDetailsComponent_ng_container_1_ng_container_10_ng_container_14_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function NotesDetailsComponent_ng_container_1_ng_container_10_ng_container_14_ng_container_1_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r45);\n      const label_r42 = restoredCtx.$implicit;\n      const note_r1 = i0.ɵɵnextContext(3).ngIf;\n      const ctx_r43 = i0.ɵɵnextContext();\n      return ctx_r43.toggleLabelOnNote(note_r1, label_r42);\n    });\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵelement(3, \"mat-checkbox\", 37);\n    i0.ɵɵelementStart(4, \"span\", 38);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const label_r42 = ctx.$implicit;\n    const note_r1 = i0.ɵɵnextContext(3).ngIf;\n    const ctx_r41 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"color\", \"primary\")(\"checked\", ctx_r41.isNoteHasLabel(note_r1, label_r42));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(label_r42.title);\n  }\n}\n\nfunction NotesDetailsComponent_ng_container_1_ng_container_10_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NotesDetailsComponent_ng_container_1_ng_container_10_ng_container_14_ng_container_1_Template, 6, 3, \"ng-container\", 35);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const labels_r40 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", labels_r40);\n  }\n}\n\nfunction NotesDetailsComponent_ng_container_1_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 26);\n    i0.ɵɵelementStart(2, \"div\", 27);\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵelementStart(4, \"input\", 28, 29);\n    i0.ɵɵlistener(\"change\", function NotesDetailsComponent_ng_container_1_ng_container_10_Template_input_change_4_listener() {\n      i0.ɵɵrestoreView(_r49);\n\n      const _r37 = i0.ɵɵreference(5);\n\n      const note_r1 = i0.ɵɵnextContext().ngIf;\n      const ctx_r47 = i0.ɵɵnextContext();\n      return ctx_r47.uploadImage(note_r1, _r37.files);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"label\", 30);\n    i0.ɵɵelement(7, \"mat-icon\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function NotesDetailsComponent_ng_container_1_ng_container_10_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const note_r1 = i0.ɵɵnextContext().ngIf;\n      const ctx_r50 = i0.ɵɵnextContext();\n      return ctx_r50.addTasksToNote(note_r1);\n    });\n    i0.ɵɵelement(9, \"mat-icon\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 32);\n    i0.ɵɵelement(11, \"mat-icon\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-menu\", null, 33);\n    i0.ɵɵtemplate(14, NotesDetailsComponent_ng_container_1_ng_container_10_ng_container_14_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵpipe(15, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function NotesDetailsComponent_ng_container_1_ng_container_10_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const note_r1 = i0.ɵɵnextContext().ngIf;\n      const ctx_r52 = i0.ɵɵnextContext();\n      return ctx_r52.toggleArchiveOnNote(note_r1);\n    });\n    i0.ɵɵelement(17, \"mat-icon\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function NotesDetailsComponent_ng_container_1_ng_container_10_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const note_r1 = i0.ɵɵnextContext().ngIf;\n      const ctx_r54 = i0.ɵɵnextContext();\n      return ctx_r54.deleteNote(note_r1);\n    });\n    i0.ɵɵelement(19, \"mat-icon\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 34);\n    i0.ɵɵtext(21, \" Close \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r38 = i0.ɵɵreference(13);\n\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"multiple\", false)(\"accept\", \"image/jpeg, image/png\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:photograph\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:clipboard-list\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r38);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:tag\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(15, 9, ctx_r6.labels$));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:archive\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:trash\");\n  }\n}\n\nfunction NotesDetailsComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r58 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NotesDetailsComponent_ng_container_1_ng_container_1_Template, 6, 2, \"ng-container\", 1);\n    i0.ɵɵelementStart(2, \"div\", 2);\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵelementStart(4, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function NotesDetailsComponent_ng_container_1_Template_input_ngModelChange_4_listener($event) {\n      const note_r1 = ctx.ngIf;\n      return note_r1.title = $event;\n    })(\"input\", function NotesDetailsComponent_ng_container_1_Template_input_input_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r58);\n      const note_r1 = restoredCtx.ngIf;\n      const ctx_r57 = i0.ɵɵnextContext();\n      return ctx_r57.updateNoteDetails(note_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 4);\n    i0.ɵɵelementStart(6, \"textarea\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function NotesDetailsComponent_ng_container_1_Template_textarea_ngModelChange_6_listener($event) {\n      const note_r1 = ctx.ngIf;\n      return note_r1.content = $event;\n    })(\"input\", function NotesDetailsComponent_ng_container_1_Template_textarea_input_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r58);\n      const note_r1 = restoredCtx.ngIf;\n      const ctx_r60 = i0.ɵɵnextContext();\n      return ctx_r60.updateNoteDetails(note_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, NotesDetailsComponent_ng_container_1_ng_container_7_Template, 7, 4, \"ng-container\", 1);\n    i0.ɵɵtemplate(8, NotesDetailsComponent_ng_container_1_ng_container_8_Template, 3, 2, \"ng-container\", 1);\n    i0.ɵɵtemplate(9, NotesDetailsComponent_ng_container_1_ng_container_9_Template, 4, 2, \"ng-container\", 1);\n    i0.ɵɵtemplate(10, NotesDetailsComponent_ng_container_1_ng_container_10_Template, 22, 11, \"ng-container\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const note_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", note_r1.image);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"placeholder\", \"Title\")(\"ngModel\", note_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"placeholder\", \"Note\")(\"ngModel\", note_r1.content);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", note_r1.tasks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", note_r1.labels && note_r1.labels.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !note_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", note_r1.id);\n  }\n}\n\nexport class NotesDetailsComponent {\n  /**\n   * Constructor\n   */\n  constructor(_changeDetectorRef, _data, _notesService, _matDialogRef) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._data = _data;\n    this._notesService = _notesService;\n    this._matDialogRef = _matDialogRef;\n    this.noteChanged = new Subject();\n    this._unsubscribeAll = new Subject();\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n\n\n  ngOnInit() {\n    // Edit\n    if (this._data.note.id) {\n      // Request the data from the server\n      this._notesService.getNoteById(this._data.note.id).subscribe(); // Get the note\n\n\n      this.note$ = this._notesService.note$;\n    } // Add\n    else {\n      // Create an empty note\n      const note = {\n        id: null,\n        title: '',\n        content: '',\n        tasks: null,\n        image: null,\n        reminder: null,\n        labels: [],\n        archived: false,\n        createdAt: null,\n        updatedAt: null\n      };\n      this.note$ = of(note);\n    } // Get the labels\n\n\n    this.labels$ = this._notesService.labels$; // Subscribe to note updates\n\n    this.noteChanged.pipe(takeUntil(this._unsubscribeAll), debounceTime(500), switchMap(note => this._notesService.updateNote(note))).subscribe(() => {\n      // Mark for check\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /**\n   * On destroy\n   */\n\n\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n\n    this._unsubscribeAll.complete();\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Create a new note\n   *\n   * @param note\n   */\n\n\n  createNote(note) {\n    this._notesService.createNote(note).pipe(map(() => {\n      // Get the note\n      this.note$ = this._notesService.note$;\n    })).subscribe();\n  }\n  /**\n   * Upload image to given note\n   *\n   * @param note\n   * @param fileList\n   */\n\n\n  uploadImage(note, fileList) {\n    // Return if canceled\n    if (!fileList.length) {\n      return;\n    }\n\n    const allowedTypes = ['image/jpeg', 'image/png'];\n    const file = fileList[0]; // Return if the file is not allowed\n\n    if (!allowedTypes.includes(file.type)) {\n      return;\n    }\n\n    this._readAsDataURL(file).then(data => {\n      // Update the image\n      note.image = data; // Update the note\n\n      this.noteChanged.next(note);\n    });\n  }\n  /**\n   * Remove the image on the given note\n   *\n   * @param note\n   */\n\n\n  removeImage(note) {\n    note.image = null; // Update the note\n\n    this.noteChanged.next(note);\n  }\n  /**\n   * Add an empty tasks array to note\n   *\n   * @param note\n   */\n\n\n  addTasksToNote(note) {\n    if (!note.tasks) {\n      note.tasks = [];\n    }\n  }\n  /**\n   * Add task to the given note\n   *\n   * @param note\n   * @param task\n   */\n\n\n  addTaskToNote(note, task) {\n    if (task.trim() === '') {\n      return;\n    } // Add the task\n\n\n    this._notesService.addTask(note, task).subscribe();\n  }\n  /**\n   * Remove the given task from given note\n   *\n   * @param note\n   * @param task\n   */\n\n\n  removeTaskFromNote(note, task) {\n    // Remove the task\n    note.tasks = note.tasks.filter(item => item.id !== task.id); // Update the note\n\n    this.noteChanged.next(note);\n  }\n  /**\n   * Update the given task on the given note\n   *\n   * @param note\n   * @param task\n   */\n\n\n  updateTaskOnNote(note, task) {\n    // If the task is already available on the item\n    if (task.id) {\n      // Update the note\n      this.noteChanged.next(note);\n    }\n  }\n  /**\n   * Is the given note has the given label\n   *\n   * @param note\n   * @param label\n   */\n\n\n  isNoteHasLabel(note, label) {\n    return !!note.labels.find(item => item.id === label.id);\n  }\n  /**\n   * Toggle the given label on the given note\n   *\n   * @param note\n   * @param label\n   */\n\n\n  toggleLabelOnNote(note, label) {\n    // If the note already has the label\n    if (this.isNoteHasLabel(note, label)) {\n      note.labels = note.labels.filter(item => item.id !== label.id);\n    } // Otherwise\n    else {\n      note.labels.push(label);\n    } // Update the note\n\n\n    this.noteChanged.next(note);\n  }\n  /**\n   * Toggle archived status on the given note\n   *\n   * @param note\n   */\n\n\n  toggleArchiveOnNote(note) {\n    note.archived = !note.archived; // Update the note\n\n    this.noteChanged.next(note); // Close the dialog\n\n    this._matDialogRef.close();\n  }\n  /**\n   * Update the note details\n   *\n   * @param note\n   */\n\n\n  updateNoteDetails(note) {\n    this.noteChanged.next(note);\n  }\n  /**\n   * Delete the given note\n   *\n   * @param note\n   */\n\n\n  deleteNote(note) {\n    this._notesService.deleteNote(note).subscribe(isDeleted => {\n      // Return if the note wasn't deleted...\n      if (!isDeleted) {\n        return;\n      } // Close the dialog\n\n\n      this._matDialogRef.close();\n    });\n  }\n  /**\n   * Track by function for ngFor loops\n   *\n   * @param index\n   * @param item\n   */\n\n\n  trackByFn(index, item) {\n    return item.id || index;\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Private methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Read the given file for demonstration purposes\n   *\n   * @param file\n   */\n\n\n  _readAsDataURL(file) {\n    // Return a new promise\n    return new Promise((resolve, reject) => {\n      // Create a new reader\n      const reader = new FileReader(); // Resolve the promise on success\n\n      reader.onload = () => {\n        resolve(reader.result);\n      }; // Reject the promise on error\n\n\n      reader.onerror = e => {\n        reject(e);\n      }; // Read the file as the\n\n\n      reader.readAsDataURL(file);\n    });\n  }\n\n}\n\nNotesDetailsComponent.ɵfac = function NotesDetailsComponent_Factory(t) {\n  return new (t || NotesDetailsComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.NotesService), i0.ɵɵdirectiveInject(i2.MatDialogRef));\n};\n\nNotesDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NotesDetailsComponent,\n  selectors: [[\"notes-details\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[1, \"flex\", \"flex-col\", \"flex-auto\", \"md:w-160\", \"md:min-w-160\", \"-m-6\"], [4, \"ngIf\"], [1, \"m-4\"], [1, \"w-full\", \"p-2\", \"text-2xl\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", \"input\"], [1, \"flex\", \"w-full\", \"py-5\", \"px-2\"], [\"matTextareaAutosize\", \"\", 1, \"w-full\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\", \"input\"], [1, \"relative\", \"w-full\"], [1, \"absolute\", \"right-0\", \"bottom-0\", \"p-4\"], [\"mat-icon-button\", \"\", 3, \"click\"], [1, \"text-white\", 3, \"svgIcon\"], [1, \"w-full\", \"object-cover\", 3, \"src\"], [1, \"mx-2\", \"mt-4\", \"space-y-1.5\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"flex\", \"items-center\"], [1, \"-ml-0.5\", \"icon-size-5\", \"text-hint\", 3, \"svgIcon\"], [1, \"w-full\", \"ml-1.5\", \"px-1\", \"py-0.5\", 3, \"placeholder\", \"keydown.enter\"], [\"newTaskInput\", \"\"], [1, \"group\", \"flex\", \"items-center\"], [1, \"flex\", \"items-center\", 3, \"color\", \"ngModel\", \"ngModelChange\", \"change\"], [1, \"w-full\", \"px-1\", \"py-0.5\", 3, \"ngClass\", \"placeholder\", \"ngModel\", \"ngModelChange\", \"input\"], [1, \"hidden\", \"group-hover:flex\", \"ml-auto\", \"icon-size-5\", \"cursor-pointer\", 3, \"svgIcon\", \"click\"], [1, \"flex\", \"flex-wrap\", \"items-center\", \"mx-1\", \"mt-6\"], [1, \"flex\", \"items-center\", \"m-1\", \"py-0.5\", \"px-3\", \"rounded-full\", \"text-sm\", \"font-medium\", \"text-gray-500\", \"bg-gray-100\", \"dark:text-gray-300\", \"dark:bg-gray-700\"], [1, \"ml-1\", \"icon-size-4\", \"cursor-pointer\", 3, \"svgIcon\", \"click\"], [1, \"flex\", \"items-center\", \"justify-end\", \"mt-4\"], [\"mat-flat-button\", \"\", 3, \"color\", \"disabled\", \"click\"], [1, \"flex\", \"items-center\", \"justify-between\", \"mt-4\"], [1, \"flex\", \"items-center\", \"space-x-2\"], [\"id\", \"image-file-input\", \"type\", \"file\", 1, \"absolute\", \"h-0\", \"w-0\", \"opacity-0\", \"invisible\", \"pointer-events-none\", 3, \"multiple\", \"accept\", \"change\"], [\"imageFileInput\", \"\"], [\"for\", \"image-file-input\", \"matRipple\", \"\", 1, \"flex\", \"items-center\", \"justify-center\", \"w-10\", \"h-10\", \"rounded-full\", \"cursor-pointer\", \"hover:bg-gray-400\", \"hover:bg-opacity-20\", \"dark:hover:bg-black\", \"dark:hover:bg-opacity-5\"], [3, \"svgIcon\"], [\"mat-icon-button\", \"\", 3, \"matMenuTriggerFor\"], [\"labelsMenu\", \"matMenu\"], [\"mat-flat-button\", \"\", \"matDialogClose\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-menu-item\", \"\", 3, \"click\"], [\"disableRipple\", \"\", 1, \"flex\", \"items-center\", \"pointer-events-none\", 3, \"color\", \"checked\"], [1, \"ml-1\", \"leading-5\"]],\n  template: function NotesDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, NotesDetailsComponent_ng_container_1_Template, 11, 9, \"ng-container\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.note$));\n    }\n  },\n  directives: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.MatTextareaAutosize, i6.MatButton, i7.MatIcon, i3.NgForOf, i8.MatCheckbox, i3.NgClass, i9.MatRipple, i10.MatMenuTrigger, i10.MatMenu, i2.MatDialogClose, i10.MatMenuItem],\n  pipes: [i3.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});","map":{"version":3,"sources":["/Users/pablolondono/Library/Mobile Documents/com~apple~CloudDocs/Documents/MinTic/Ciclo 4/Programación/LaGenerica_G1/Front/src/app/modules/admin/apps/notes/details/details.component.ts","/Users/pablolondono/Library/Mobile Documents/com~apple~CloudDocs/Documents/MinTic/Ciclo 4/Programación/LaGenerica_G1/Front/src/app/modules/admin/apps/notes/details/details.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { debounceTime, map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { Observable, of, Subject } from 'rxjs';\nimport { NotesService } from 'app/modules/admin/apps/notes/notes.service';\nimport { Label, Note, Task } from 'app/modules/admin/apps/notes/notes.types';\n\n@Component({\n    selector       : 'notes-details',\n    templateUrl    : './details.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotesDetailsComponent implements OnInit, OnDestroy\n{\n    note$: Observable<Note>;\n    labels$: Observable<Label[]>;\n\n    noteChanged: Subject<Note> = new Subject<Note>();\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        @Inject(MAT_DIALOG_DATA) private _data: { note: Note },\n        private _notesService: NotesService,\n        private _matDialogRef: MatDialogRef<NotesDetailsComponent>\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Edit\n        if ( this._data.note.id )\n        {\n            // Request the data from the server\n            this._notesService.getNoteById(this._data.note.id).subscribe();\n\n            // Get the note\n            this.note$ = this._notesService.note$;\n        }\n        // Add\n        else\n        {\n            // Create an empty note\n            const note = {\n                id       : null,\n                title    : '',\n                content  : '',\n                tasks    : null,\n                image    : null,\n                reminder : null,\n                labels   : [],\n                archived : false,\n                createdAt: null,\n                updatedAt: null\n            };\n\n            this.note$ = of(note);\n        }\n\n        // Get the labels\n        this.labels$ = this._notesService.labels$;\n\n        // Subscribe to note updates\n        this.noteChanged\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(500),\n                switchMap(note => this._notesService.updateNote(note)))\n            .subscribe(() => {\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Create a new note\n     *\n     * @param note\n     */\n    createNote(note: Note): void\n    {\n        this._notesService.createNote(note).pipe(\n            map(() => {\n                // Get the note\n                this.note$ = this._notesService.note$;\n            })).subscribe();\n    }\n\n    /**\n     * Upload image to given note\n     *\n     * @param note\n     * @param fileList\n     */\n    uploadImage(note: Note, fileList: FileList): void\n    {\n        // Return if canceled\n        if ( !fileList.length )\n        {\n            return;\n        }\n\n        const allowedTypes = ['image/jpeg', 'image/png'];\n        const file = fileList[0];\n\n        // Return if the file is not allowed\n        if ( !allowedTypes.includes(file.type) )\n        {\n            return;\n        }\n\n        this._readAsDataURL(file).then((data) => {\n\n            // Update the image\n            note.image = data;\n\n            // Update the note\n            this.noteChanged.next(note);\n        });\n    }\n\n    /**\n     * Remove the image on the given note\n     *\n     * @param note\n     */\n    removeImage(note: Note): void\n    {\n        note.image = null;\n\n        // Update the note\n        this.noteChanged.next(note);\n    }\n\n    /**\n     * Add an empty tasks array to note\n     *\n     * @param note\n     */\n    addTasksToNote(note): void\n    {\n        if ( !note.tasks )\n        {\n            note.tasks = [];\n        }\n    }\n\n    /**\n     * Add task to the given note\n     *\n     * @param note\n     * @param task\n     */\n    addTaskToNote(note: Note, task: string): void\n    {\n        if ( task.trim() === '' )\n        {\n            return;\n        }\n\n        // Add the task\n        this._notesService.addTask(note, task).subscribe();\n    }\n\n    /**\n     * Remove the given task from given note\n     *\n     * @param note\n     * @param task\n     */\n    removeTaskFromNote(note: Note, task: Task): void\n    {\n        // Remove the task\n        note.tasks = note.tasks.filter(item => item.id !== task.id);\n\n        // Update the note\n        this.noteChanged.next(note);\n    }\n\n    /**\n     * Update the given task on the given note\n     *\n     * @param note\n     * @param task\n     */\n    updateTaskOnNote(note: Note, task: Task): void\n    {\n        // If the task is already available on the item\n        if ( task.id )\n        {\n            // Update the note\n            this.noteChanged.next(note);\n        }\n    }\n\n    /**\n     * Is the given note has the given label\n     *\n     * @param note\n     * @param label\n     */\n    isNoteHasLabel(note: Note, label: Label): boolean\n    {\n        return !!note.labels.find(item => item.id === label.id);\n    }\n\n    /**\n     * Toggle the given label on the given note\n     *\n     * @param note\n     * @param label\n     */\n    toggleLabelOnNote(note: Note, label: Label): void\n    {\n        // If the note already has the label\n        if ( this.isNoteHasLabel(note, label) )\n        {\n            note.labels = note.labels.filter(item => item.id !== label.id);\n        }\n        // Otherwise\n        else\n        {\n            note.labels.push(label);\n        }\n\n        // Update the note\n        this.noteChanged.next(note);\n    }\n\n    /**\n     * Toggle archived status on the given note\n     *\n     * @param note\n     */\n    toggleArchiveOnNote(note: Note): void\n    {\n        note.archived = !note.archived;\n\n        // Update the note\n        this.noteChanged.next(note);\n\n        // Close the dialog\n        this._matDialogRef.close();\n    }\n\n    /**\n     * Update the note details\n     *\n     * @param note\n     */\n    updateNoteDetails(note: Note): void\n    {\n        this.noteChanged.next(note);\n    }\n\n    /**\n     * Delete the given note\n     *\n     * @param note\n     */\n    deleteNote(note: Note): void\n    {\n        this._notesService.deleteNote(note)\n            .subscribe((isDeleted) => {\n\n                // Return if the note wasn't deleted...\n                if ( !isDeleted )\n                {\n                    return;\n                }\n\n                // Close the dialog\n                this._matDialogRef.close();\n            });\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Read the given file for demonstration purposes\n     *\n     * @param file\n     */\n    private _readAsDataURL(file: File): Promise<any>\n    {\n        // Return a new promise\n        return new Promise((resolve, reject) => {\n\n            // Create a new reader\n            const reader = new FileReader();\n\n            // Resolve the promise on success\n            reader.onload = (): void => {\n                resolve(reader.result);\n            };\n\n            // Reject the promise on error\n            reader.onerror = (e): void => {\n                reject(e);\n            };\n\n            // Read the file as the\n            reader.readAsDataURL(file);\n        });\n    }\n}\n","<div class=\"flex flex-col flex-auto md:w-160 md:min-w-160 -m-6\">\n    <ng-container *ngIf=\"(note$ | async) as note\">\n        <!-- Image -->\n        <ng-container *ngIf=\"note.image\">\n            <div class=\"relative w-full\">\n                <div class=\"absolute right-0 bottom-0 p-4\">\n                    <button\n                        mat-icon-button\n                        (click)=\"removeImage(note)\">\n                        <mat-icon\n                            class=\"text-white\"\n                            [svgIcon]=\"'heroicons_outline:trash'\"></mat-icon>\n                    </button>\n                </div>\n                <img\n                    class=\"w-full object-cover\"\n                    [src]=\"note.image\">\n            </div>\n        </ng-container>\n        <div class=\"m-4\">\n            <!-- Title -->\n            <div>\n                <input\n                    class=\"w-full p-2 text-2xl\"\n                    [placeholder]=\"'Title'\"\n                    [(ngModel)]=\"note.title\"\n                    (input)=\"updateNoteDetails(note)\">\n            </div>\n            <!-- Note -->\n            <div class=\"flex w-full py-5 px-2\">\n                <textarea\n                    class=\"w-full\"\n                    [placeholder]=\"'Note'\"\n                    [(ngModel)]=\"note.content\"\n                    (input)=\"updateNoteDetails(note)\"\n                    matTextareaAutosize></textarea>\n            </div>\n            <!-- Tasks -->\n            <ng-container *ngIf=\"note.tasks\">\n                <div class=\"mx-2 mt-4 space-y-1.5\">\n                    <ng-container *ngFor=\"let task of note.tasks; trackBy: trackByFn\">\n                        <div class=\"group flex items-center\">\n                            <mat-checkbox\n                                class=\"flex items-center\"\n                                [color]=\"'primary'\"\n                                [(ngModel)]=\"task.completed\"\n                                (change)=\"updateTaskOnNote(note, task)\"></mat-checkbox>\n                            <input\n                                class=\"w-full px-1 py-0.5\"\n                                [ngClass]=\"{'text-secondary line-through': task.completed}\"\n                                [placeholder]=\"'Task'\"\n                                [(ngModel)]=\"task.content\"\n                                (input)=\"updateTaskOnNote(note, task)\">\n                            <mat-icon\n                                class=\"hidden group-hover:flex ml-auto icon-size-5 cursor-pointer\"\n                                [svgIcon]=\"'heroicons_solid:x'\"\n                                (click)=\"removeTaskFromNote(note, task)\"></mat-icon>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex items-center\">\n                        <mat-icon\n                            class=\"-ml-0.5 icon-size-5 text-hint\"\n                            [svgIcon]=\"'heroicons_solid:plus'\"></mat-icon>\n                        <input\n                            class=\"w-full ml-1.5 px-1 py-0.5\"\n                            [placeholder]=\"'Add task'\"\n                            (keydown.enter)=\"addTaskToNote(note, newTaskInput.value); newTaskInput.value = ''\"\n                            #newTaskInput>\n                    </div>\n                </div>\n            </ng-container>\n            <!-- Labels -->\n            <ng-container *ngIf=\"note.labels && note.labels.length\">\n                <div class=\"flex flex-wrap items-center mx-1 mt-6\">\n                    <ng-container *ngFor=\"let label of note.labels; trackBy: trackByFn\">\n                        <div class=\"flex items-center m-1 py-0.5 px-3 rounded-full text-sm font-medium text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700\">\n                            <div>\n                                {{label.title}}\n                            </div>\n                            <mat-icon\n                                class=\"ml-1 icon-size-4 cursor-pointer\"\n                                [svgIcon]=\"'heroicons_solid:x-circle'\"\n                                (click)=\"toggleLabelOnNote(note, label)\"></mat-icon>\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-container>\n            <!-- Add Actions -->\n            <ng-container *ngIf=\"!note.id\">\n                <div class=\"flex items-center justify-end mt-4\">\n                    <!-- Save -->\n                    <button\n                        mat-flat-button\n                        [color]=\"'primary'\"\n                        [disabled]=\"!note.title && !note.content\"\n                        (click)=\"createNote(note)\">\n                        Save\n                    </button>\n                </div>\n            </ng-container>\n            <!-- Edit Actions -->\n            <ng-container *ngIf=\"note.id\">\n                <div class=\"flex items-center justify-between mt-4\">\n                    <div class=\"flex items-center space-x-2\">\n                        <!-- Image -->\n                        <div>\n                            <input\n                                id=\"image-file-input\"\n                                class=\"absolute h-0 w-0 opacity-0 invisible pointer-events-none\"\n                                type=\"file\"\n                                [multiple]=\"false\"\n                                [accept]=\"'image/jpeg, image/png'\"\n                                (change)=\"uploadImage(note, imageFileInput.files)\"\n                                #imageFileInput>\n                            <label\n                                class=\"flex items-center justify-center w-10 h-10 rounded-full cursor-pointer hover:bg-gray-400 hover:bg-opacity-20 dark:hover:bg-black dark:hover:bg-opacity-5\"\n                                for=\"image-file-input\"\n                                matRipple>\n                                <mat-icon [svgIcon]=\"'heroicons_outline:photograph'\"></mat-icon>\n                            </label>\n                        </div>\n                        <!-- Checklist -->\n                        <button\n                            mat-icon-button\n                            (click)=\"addTasksToNote(note)\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:clipboard-list'\"></mat-icon>\n                        </button>\n                        <!-- Labels -->\n                        <button\n                            mat-icon-button\n                            [matMenuTriggerFor]=\"labelsMenu\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:tag'\"></mat-icon>\n                        </button>\n                        <mat-menu #labelsMenu=\"matMenu\">\n                            <ng-container *ngIf=\"(labels$ | async) as labels\">\n                                <ng-container *ngFor=\"let label of labels\">\n                                    <button\n                                        mat-menu-item\n                                        (click)=\"toggleLabelOnNote(note, label)\">\n                                        <span class=\"flex items-center\">\n                                            <mat-checkbox\n                                                class=\"flex items-center pointer-events-none\"\n                                                [color]=\"'primary'\"\n                                                [checked]=\"isNoteHasLabel(note, label)\"\n                                                disableRipple></mat-checkbox>\n                                            <span class=\"ml-1 leading-5\">{{label.title}}</span>\n                                        </span>\n                                    </button>\n                                </ng-container>\n                            </ng-container>\n                        </mat-menu>\n                        <!-- Archive -->\n                        <button\n                            mat-icon-button\n                            (click)=\"toggleArchiveOnNote(note)\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:archive'\"></mat-icon>\n                        </button>\n                        <!-- Delete -->\n                        <button\n                            mat-icon-button\n                            (click)=\"deleteNote(note)\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:trash'\"></mat-icon>\n                        </button>\n                    </div>\n                    <!-- Close -->\n                    <button\n                        mat-flat-button\n                        matDialogClose>\n                        Close\n                    </button>\n                </div>\n            </ng-container>\n        </div>\n    </ng-container>\n\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}