{"ast":null,"code":"import { BehaviorSubject, combineLatest, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, takeUntil } from 'rxjs/operators';\nimport { NotesDetailsComponent } from 'app/modules/admin/apps/notes/details/details.component';\nimport { NotesLabelsComponent } from 'app/modules/admin/apps/notes/labels/labels.component';\nimport { cloneDeep } from 'lodash-es';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@fuse/services/media-watcher\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"app/modules/admin/apps/notes/notes.service\";\nimport * as i4 from \"@angular/material/sidenav\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@fuse/components/masonry/masonry.component\";\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"bg-gray-200 dark:bg-gray-700 text-primary dark:text-primary-400\": a0,\n    \"text-hint hover:bg-hover\": a1\n  };\n};\n\nfunction NotesListComponent_ng_container_14_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function NotesListComponent_ng_container_14_ng_container_1_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const label_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.filterByLabel(label_r10.id);\n    });\n    i0.ɵɵelement(2, \"mat-icon\", 7);\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const label_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c0, \"label:\" + label_r10.id === ctx_r9.filterStatus, \"label:\" + label_r10.id !== ctx_r9.filterStatus))(\"matRippleDisabled\", \"label:\" + label_r10.id === ctx_r9.filterStatus);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:tag\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(label_r10.title);\n  }\n}\n\nfunction NotesListComponent_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NotesListComponent_ng_container_14_ng_container_1_Template, 5, 7, \"ng-container\", 29);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const labels_r8 = ctx.ngIf;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", labels_r8)(\"ngForTrackBy\", ctx_r1.trackByFn);\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"img\", 35);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const note_r21 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", note_r21.image, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const note_r21 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", note_r21.title, \" \");\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const note_r21 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"text-xl\", note_r21.content.length < 70);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", note_r21.content, \" \");\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 39);\n    i0.ɵɵelement(2, \"div\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_ng_container_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"mat-icon\", 41);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:check-circle\");\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"text-secondary line-through\": a0\n  };\n};\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵtemplate(2, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_ng_container_2_ng_container_2_Template, 3, 0, \"ng-container\", 9);\n    i0.ɵɵtemplate(3, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_ng_container_2_ng_container_3_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementStart(4, \"div\", 38);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const task_r31 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !task_r31.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r31.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, task_r31.completed));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r31.content, \" \");\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 37);\n    i0.ɵɵtemplate(2, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_ng_container_2_Template, 6, 6, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const note_r21 = i0.ɵɵnextContext().$implicit;\n    const ctx_r25 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", note_r21.tasks)(\"ngForTrackBy\", ctx_r25.trackByFn);\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 43);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const label_r36 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", label_r36.title, \" \");\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 42);\n    i0.ɵɵtemplate(2, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_7_ng_container_2_Template, 3, 1, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const note_r21 = i0.ɵɵnextContext().$implicit;\n    const ctx_r26 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", note_r21.labels)(\"ngForTrackBy\", ctx_r26.trackByFn);\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 33);\n    i0.ɵɵlistener(\"click\", function NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r39);\n      const note_r21 = restoredCtx.$implicit;\n      const ctx_r38 = i0.ɵɵnextContext(5);\n      return ctx_r38.openNoteDialog(note_r21);\n    });\n    i0.ɵɵtemplate(2, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_2_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementStart(3, \"div\", 34);\n    i0.ɵɵtemplate(4, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_4_Template, 3, 1, \"ng-container\", 9);\n    i0.ɵɵtemplate(5, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_5_Template, 3, 3, \"ng-container\", 9);\n    i0.ɵɵtemplate(6, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵtemplate(7, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_7_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const note_r21 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", note_r21.image);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", note_r21.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", note_r21.content);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", note_r21.tasks);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", note_r21.labels);\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 32);\n    i0.ɵɵtemplate(2, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_Template, 8, 5, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const column_r19 = ctx.$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", column_r19.items)(\"ngForTrackBy\", ctx_r18.trackByFn);\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_Template, 3, 2, \"ng-container\", 29);\n  }\n\n  if (rf & 2) {\n    const columns_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngForOf\", columns_r17)(\"ngForTrackBy\", ctx_r16.trackByFn);\n  }\n}\n\nfunction NotesListComponent_ng_container_34_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"fuse-masonry\", 30);\n    i0.ɵɵtemplate(2, NotesListComponent_ng_container_34_ng_container_1_ng_template_2_Template, 1, 2, \"ng-template\", null, 31, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const _r15 = i0.ɵɵreference(3);\n\n    const notes_r13 = i0.ɵɵnextContext().ngIf;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"items\", notes_r13)(\"columns\", ctx_r14.masonryColumns)(\"columnsTemplate\", _r15);\n  }\n}\n\nfunction NotesListComponent_ng_container_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NotesListComponent_ng_container_34_ng_container_1_Template, 4, 3, \"ng-container\", 26);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const notes_r13 = ctx.ngIf;\n    i0.ɵɵnextContext();\n\n    const _r6 = i0.ɵɵreference(39);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notes_r13.length)(\"ngIfElse\", _r6);\n  }\n}\n\nfunction NotesListComponent_ng_template_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵelementStart(1, \"div\", 45);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NotesListComponent_ng_template_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵelement(1, \"mat-icon\", 46);\n    i0.ɵɵelementStart(2, \"div\", 45);\n    i0.ɵɵtext(3, \"There are no notes!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", \"iconsmind:file_hide\");\n  }\n}\n\nexport class NotesListComponent {\n  /**\n   * Constructor\n   */\n  constructor(_changeDetectorRef, _fuseMediaWatcherService, _matDialog, _notesService) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._fuseMediaWatcherService = _fuseMediaWatcherService;\n    this._matDialog = _matDialog;\n    this._notesService = _notesService;\n    this.drawerMode = 'side';\n    this.drawerOpened = true;\n    this.filter$ = new BehaviorSubject('notes');\n    this.searchQuery$ = new BehaviorSubject(null);\n    this.masonryColumns = 4;\n    this._unsubscribeAll = new Subject();\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Accessors\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Get the filter status\n   */\n\n\n  get filterStatus() {\n    return this.filter$.value;\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n\n\n  ngOnInit() {\n    // Request the data from the server\n    this._notesService.getLabels().subscribe();\n\n    this._notesService.getNotes().subscribe(); // Get labels\n\n\n    this.labels$ = this._notesService.labels$; // Get notes\n\n    this.notes$ = combineLatest([this._notesService.notes$, this.filter$, this.searchQuery$]).pipe(distinctUntilChanged(), map(([notes, filter, searchQuery]) => {\n      if (!notes || !notes.length) {\n        return;\n      } // Store the filtered notes\n\n\n      let filteredNotes = notes; // Filter by query\n\n      if (searchQuery) {\n        searchQuery = searchQuery.trim().toLowerCase();\n        filteredNotes = filteredNotes.filter(note => note.title.toLowerCase().includes(searchQuery) || note.content.toLowerCase().includes(searchQuery));\n      } // Show all\n\n\n      if (filter === 'notes') {// Do nothing\n      } // Show archive\n\n\n      const isArchive = filter === 'archived';\n      filteredNotes = filteredNotes.filter(note => note.archived === isArchive); // Filter by label\n\n      if (filter.startsWith('label:')) {\n        const labelId = filter.split(':')[1];\n        filteredNotes = filteredNotes.filter(note => !!note.labels.find(item => item.id === labelId));\n      }\n\n      return filteredNotes;\n    })); // Subscribe to media changes\n\n    this._fuseMediaWatcherService.onMediaChange$.pipe(takeUntil(this._unsubscribeAll)).subscribe(({\n      matchingAliases\n    }) => {\n      // Set the drawerMode and drawerOpened if the given breakpoint is active\n      if (matchingAliases.includes('lg')) {\n        this.drawerMode = 'side';\n        this.drawerOpened = true;\n      } else {\n        this.drawerMode = 'over';\n        this.drawerOpened = false;\n      } // Set the masonry columns\n      //\n      // This if block structured in a way so that only the\n      // biggest matching alias will be used to set the column\n      // count.\n\n\n      if (matchingAliases.includes('xl')) {\n        this.masonryColumns = 5;\n      } else if (matchingAliases.includes('lg')) {\n        this.masonryColumns = 4;\n      } else if (matchingAliases.includes('md')) {\n        this.masonryColumns = 3;\n      } else if (matchingAliases.includes('sm')) {\n        this.masonryColumns = 2;\n      } else {\n        this.masonryColumns = 1;\n      } // Mark for check\n\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /**\n   * On destroy\n   */\n\n\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n\n    this._unsubscribeAll.complete();\n  } // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Add a new note\n   */\n\n\n  addNewNote() {\n    this._matDialog.open(NotesDetailsComponent, {\n      autoFocus: false,\n      data: {\n        note: {}\n      }\n    });\n  }\n  /**\n   * Open the edit labels dialog\n   */\n\n\n  openEditLabelsDialog() {\n    this._matDialog.open(NotesLabelsComponent, {\n      autoFocus: false\n    });\n  }\n  /**\n   * Open the note dialog\n   */\n\n\n  openNoteDialog(note) {\n    this._matDialog.open(NotesDetailsComponent, {\n      autoFocus: false,\n      data: {\n        note: cloneDeep(note)\n      }\n    });\n  }\n  /**\n   * Filter by archived\n   */\n\n\n  filterByArchived() {\n    this.filter$.next('archived');\n  }\n  /**\n   * Filter by label\n   *\n   * @param labelId\n   */\n\n\n  filterByLabel(labelId) {\n    const filterValue = `label:${labelId}`;\n    this.filter$.next(filterValue);\n  }\n  /**\n   * Filter by query\n   *\n   * @param query\n   */\n\n\n  filterByQuery(query) {\n    this.searchQuery$.next(query);\n  }\n  /**\n   * Reset filter\n   */\n\n\n  resetFilter() {\n    this.filter$.next('notes');\n  }\n  /**\n   * Track by function for ngFor loops\n   *\n   * @param index\n   * @param item\n   */\n\n\n  trackByFn(index, item) {\n    return item.id || index;\n  }\n\n}\n\nNotesListComponent.ɵfac = function NotesListComponent_Factory(t) {\n  return new (t || NotesListComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.FuseMediaWatcherService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.NotesService));\n};\n\nNotesListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NotesListComponent,\n  selectors: [[\"notes-list\"]],\n  decls: 40,\n  vars: 28,\n  consts: [[1, \"absolute\", \"inset-0\", \"flex\", \"flex-col\", \"min-w-0\", \"overflow-hidden\"], [1, \"flex-auto\", \"h-full\", \"bg-card\", \"dark:bg-transparent\"], [1, \"w-2/3\", \"sm:w-72\", \"lg:w-56\", \"border-r-0\", \"bg-default\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [1, \"p-6\", \"lg:py-8\", \"lg:pl-4\", \"lg:pr-0\"], [1, \"space-y-2\"], [\"matRipple\", \"\", 1, \"relative\", \"flex\", \"items-center\", \"py-2\", \"px-4\", \"font-medium\", \"rounded-full\", \"cursor-pointer\", 3, \"ngClass\", \"matRippleDisabled\", \"click\"], [1, \"text-current\", 3, \"svgIcon\"], [1, \"ml-3\", \"leading-5\", \"select-none\", \"text-default\"], [4, \"ngIf\"], [\"matRipple\", \"\", 1, \"relative\", \"flex\", \"items-center\", \"py-2\", \"px-4\", \"font-medium\", \"rounded-full\", \"cursor-pointer\", \"hover:bg-hover\", 3, \"click\"], [1, \"text-hint\", 3, \"svgIcon\"], [1, \"ml-3\", \"leading-5\", \"select-none\"], [1, \"flex\", \"flex-col\", \"bg-gray-100\", \"dark:bg-transparent\"], [1, \"flex\", \"flex-col\", \"flex-auto\", \"p-6\", \"md:p-8\"], [1, \"flex\", \"items-center\"], [1, \"flex\", \"items-center\", \"flex-auto\"], [\"mat-icon-button\", \"\", 1, \"flex\", \"lg:hidden\", \"-ml-2\", 3, \"click\"], [3, \"svgIcon\"], [1, \"fuse-mat-rounded\", \"fuse-mat-dense\", \"fuse-mat-no-subscript\", \"flex-auto\", \"ml-4\", \"lg:ml-0\"], [\"matPrefix\", \"\", 1, \"icon-size-5\", 3, \"svgIcon\"], [\"matInput\", \"\", 3, \"autocomplete\", \"placeholder\", \"input\"], [\"searchInput\", \"\"], [\"mat-flat-button\", \"\", 1, \"ml-4\", \"px-1\", \"sm:px-4\", \"min-w-10\", 3, \"color\", \"click\"], [1, \"icon-size-5\", 3, \"svgIcon\"], [1, \"hidden\", \"sm:inline-block\", \"ml-2\"], [4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [\"noNotes\", \"\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"-mx-2\", \"mt-8\", 3, \"items\", \"columns\", \"columnsTemplate\"], [\"columnsTemplate\", \"\"], [1, \"flex-1\", \"px-2\", \"space-y-4\"], [1, \"flex\", \"flex-col\", \"shadow\", \"rounded-2xl\", \"overflow-hidden\", \"cursor-pointer\", \"bg-card\", 3, \"click\"], [1, \"flex\", \"flex-auto\", \"flex-col\", \"p-6\", \"space-y-4\"], [1, \"w-full\", \"object-cover\", 3, \"src\"], [1, \"font-semibold\", \"line-clamp-3\"], [1, \"space-y-1.5\"], [1, \"ml-1.5\", \"leading-5\", 3, \"ngClass\"], [1, \"flex\", \"items-center\", \"justify-center\", \"w-5\", \"h-5\"], [1, \"w-4\", \"h-4\", \"rounded-full\", \"border-2\"], [1, \"text-hint\", \"icon-size-5\", 3, \"svgIcon\"], [1, \"flex\", \"flex-wrap\", \"items-center\", \"-m-1\"], [1, \"m-1\", \"py-0.5\", \"px-3\", \"rounded-full\", \"text-sm\", \"font-medium\", \"text-gray-500\", \"bg-gray-100\", \"dark:text-gray-300\", \"dark:bg-gray-700\"], [1, \"flex\", \"flex-auto\", \"flex-col\", \"items-center\", \"justify-center\", \"bg-gray-100\", \"dark:bg-transparent\"], [1, \"mt-4\", \"text-2xl\", \"font-semibold\", \"tracking-tight\", \"text-secondary\"], [1, \"icon-size-24\", 3, \"svgIcon\"]],\n  template: function NotesListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r41 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"mat-drawer-container\", 1);\n      i0.ɵɵelementStart(2, \"mat-drawer\", 2, 3);\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵelementStart(6, \"div\", 6);\n      i0.ɵɵlistener(\"click\", function NotesListComponent_Template_div_click_6_listener() {\n        return ctx.resetFilter();\n      });\n      i0.ɵɵelement(7, \"mat-icon\", 7);\n      i0.ɵɵelementStart(8, \"div\", 8);\n      i0.ɵɵtext(9, \"Notes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 6);\n      i0.ɵɵlistener(\"click\", function NotesListComponent_Template_div_click_10_listener() {\n        return ctx.filterByArchived();\n      });\n      i0.ɵɵelement(11, \"mat-icon\", 7);\n      i0.ɵɵelementStart(12, \"div\", 8);\n      i0.ɵɵtext(13, \"Archive\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, NotesListComponent_ng_container_14_Template, 2, 2, \"ng-container\", 9);\n      i0.ɵɵpipe(15, \"async\");\n      i0.ɵɵelementStart(16, \"div\", 10);\n      i0.ɵɵlistener(\"click\", function NotesListComponent_Template_div_click_16_listener() {\n        return ctx.openEditLabelsDialog();\n      });\n      i0.ɵɵelement(17, \"mat-icon\", 11);\n      i0.ɵɵelementStart(18, \"div\", 12);\n      i0.ɵɵtext(19, \"Edit labels\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"mat-drawer-content\", 13);\n      i0.ɵɵelementStart(21, \"div\", 14);\n      i0.ɵɵelementStart(22, \"div\", 15);\n      i0.ɵɵelementStart(23, \"div\", 16);\n      i0.ɵɵelementStart(24, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function NotesListComponent_Template_button_click_24_listener() {\n        i0.ɵɵrestoreView(_r41);\n\n        const _r0 = i0.ɵɵreference(3);\n\n        return _r0.toggle();\n      });\n      i0.ɵɵelement(25, \"mat-icon\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"mat-form-field\", 19);\n      i0.ɵɵelement(27, \"mat-icon\", 20);\n      i0.ɵɵelementStart(28, \"input\", 21, 22);\n      i0.ɵɵlistener(\"input\", function NotesListComponent_Template_input_input_28_listener() {\n        i0.ɵɵrestoreView(_r41);\n\n        const _r2 = i0.ɵɵreference(29);\n\n        return ctx.filterByQuery(_r2.value);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function NotesListComponent_Template_button_click_30_listener() {\n        return ctx.addNewNote();\n      });\n      i0.ɵɵelement(31, \"mat-icon\", 24);\n      i0.ɵɵelementStart(32, \"span\", 25);\n      i0.ɵɵtext(33, \"New note\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(34, NotesListComponent_ng_container_34_Template, 2, 2, \"ng-container\", 26);\n      i0.ɵɵpipe(35, \"async\");\n      i0.ɵɵtemplate(36, NotesListComponent_ng_template_36_Template, 3, 0, \"ng-template\", null, 27, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(38, NotesListComponent_ng_template_38_Template, 4, 1, \"ng-template\", null, 28, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r4 = i0.ɵɵreference(37);\n\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"mode\", ctx.drawerMode)(\"opened\", ctx.drawerOpened);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(22, _c0, ctx.filterStatus === \"notes\", ctx.filterStatus !== \"notes\"))(\"matRippleDisabled\", ctx.filterStatus === \"notes\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:pencil-alt\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(25, _c0, ctx.filterStatus === \"archived\", ctx.filterStatus !== \"archived\"))(\"matRippleDisabled\", ctx.filterStatus === \"archived\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:archive\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(15, 18, ctx.labels$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:pencil\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:menu\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:search\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"autocomplete\", \"off\")(\"placeholder\", \"Search notes\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"color\", \"primary\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:plus-circle\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(35, 20, ctx.notes$))(\"ngIfElse\", _r4);\n    }\n  },\n  directives: [i4.MatDrawerContainer, i4.MatDrawer, i5.MatRipple, i6.NgClass, i7.MatIcon, i6.NgIf, i4.MatDrawerContent, i8.MatButton, i9.MatFormField, i9.MatPrefix, i10.MatInput, i6.NgForOf, i11.FuseMasonryComponent],\n  pipes: [i6.AsyncPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});","map":{"version":3,"sources":["/Users/pablolondono/Library/Mobile Documents/com~apple~CloudDocs/Documents/MinTic/Ciclo 4/Programación/LaGenerica_G1/Front/src/app/modules/admin/apps/notes/list/list.component.ts","/Users/pablolondono/Library/Mobile Documents/com~apple~CloudDocs/Documents/MinTic/Ciclo 4/Programación/LaGenerica_G1/Front/src/app/modules/admin/apps/notes/list/list.component.html"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, takeUntil } from 'rxjs/operators';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport { NotesDetailsComponent } from 'app/modules/admin/apps/notes/details/details.component';\nimport { NotesLabelsComponent } from 'app/modules/admin/apps/notes/labels/labels.component';\nimport { NotesService } from 'app/modules/admin/apps/notes/notes.service';\nimport { Label, Note } from 'app/modules/admin/apps/notes/notes.types';\nimport { cloneDeep } from 'lodash-es';\n\n@Component({\n    selector       : 'notes-list',\n    templateUrl    : './list.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NotesListComponent implements OnInit, OnDestroy\n{\n    labels$: Observable<Label[]>;\n    notes$: Observable<Note[]>;\n\n    drawerMode: 'over' | 'side' = 'side';\n    drawerOpened: boolean = true;\n    filter$: BehaviorSubject<string> = new BehaviorSubject('notes');\n    searchQuery$: BehaviorSubject<string> = new BehaviorSubject(null);\n    masonryColumns: number = 4;\n\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseMediaWatcherService: FuseMediaWatcherService,\n        private _matDialog: MatDialog,\n        private _notesService: NotesService\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get the filter status\n     */\n    get filterStatus(): string\n    {\n        return this.filter$.value;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Request the data from the server\n        this._notesService.getLabels().subscribe();\n        this._notesService.getNotes().subscribe();\n\n        // Get labels\n        this.labels$ = this._notesService.labels$;\n\n        // Get notes\n        this.notes$ = combineLatest([this._notesService.notes$, this.filter$, this.searchQuery$]).pipe(\n            distinctUntilChanged(),\n            map(([notes, filter, searchQuery]) => {\n\n                if ( !notes || !notes.length )\n                {\n                    return;\n                }\n\n                // Store the filtered notes\n                let filteredNotes = notes;\n\n                // Filter by query\n                if ( searchQuery )\n                {\n                    searchQuery = searchQuery.trim().toLowerCase();\n                    filteredNotes = filteredNotes.filter(note => note.title.toLowerCase().includes(searchQuery) || note.content.toLowerCase().includes(searchQuery));\n                }\n\n                // Show all\n                if ( filter === 'notes' )\n                {\n                    // Do nothing\n                }\n\n                // Show archive\n                const isArchive = filter === 'archived';\n                filteredNotes = filteredNotes.filter(note => note.archived === isArchive);\n\n                // Filter by label\n                if ( filter.startsWith('label:') )\n                {\n                    const labelId = filter.split(':')[1];\n                    filteredNotes = filteredNotes.filter(note => !!note.labels.find(item => item.id === labelId));\n                }\n\n                return filteredNotes;\n            })\n        );\n\n        // Subscribe to media changes\n        this._fuseMediaWatcherService.onMediaChange$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(({matchingAliases}) => {\n\n                // Set the drawerMode and drawerOpened if the given breakpoint is active\n                if ( matchingAliases.includes('lg') )\n                {\n                    this.drawerMode = 'side';\n                    this.drawerOpened = true;\n                }\n                else\n                {\n                    this.drawerMode = 'over';\n                    this.drawerOpened = false;\n                }\n\n                // Set the masonry columns\n                //\n                // This if block structured in a way so that only the\n                // biggest matching alias will be used to set the column\n                // count.\n                if ( matchingAliases.includes('xl') )\n                {\n                    this.masonryColumns = 5;\n                }\n                else if ( matchingAliases.includes('lg') )\n                {\n                    this.masonryColumns = 4;\n                }\n                else if ( matchingAliases.includes('md') )\n                {\n                    this.masonryColumns = 3;\n                }\n                else if ( matchingAliases.includes('sm') )\n                {\n                    this.masonryColumns = 2;\n                }\n                else\n                {\n                    this.masonryColumns = 1;\n                }\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Add a new note\n     */\n    addNewNote(): void\n    {\n        this._matDialog.open(NotesDetailsComponent, {\n            autoFocus: false,\n            data     : {\n                note: {}\n            }\n        });\n    }\n\n    /**\n     * Open the edit labels dialog\n     */\n    openEditLabelsDialog(): void\n    {\n        this._matDialog.open(NotesLabelsComponent, {autoFocus: false});\n    }\n\n    /**\n     * Open the note dialog\n     */\n    openNoteDialog(note: Note): void\n    {\n        this._matDialog.open(NotesDetailsComponent, {\n            autoFocus: false,\n            data     : {\n                note: cloneDeep(note)\n            }\n        });\n    }\n\n    /**\n     * Filter by archived\n     */\n    filterByArchived(): void\n    {\n        this.filter$.next('archived');\n    }\n\n    /**\n     * Filter by label\n     *\n     * @param labelId\n     */\n    filterByLabel(labelId: string): void\n    {\n        const filterValue = `label:${labelId}`;\n        this.filter$.next(filterValue);\n    }\n\n    /**\n     * Filter by query\n     *\n     * @param query\n     */\n    filterByQuery(query: string): void\n    {\n        this.searchQuery$.next(query);\n    }\n\n    /**\n     * Reset filter\n     */\n    resetFilter(): void\n    {\n        this.filter$.next('notes');\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden\">\n\n    <mat-drawer-container class=\"flex-auto h-full bg-card dark:bg-transparent\">\n\n        <!-- Drawer -->\n        <mat-drawer\n            class=\"w-2/3 sm:w-72 lg:w-56 border-r-0 bg-default\"\n            [mode]=\"drawerMode\"\n            [opened]=\"drawerOpened\"\n            #drawer>\n            <div class=\"p-6 lg:py-8 lg:pl-4 lg:pr-0\">\n                <!-- Filters -->\n                <div class=\"space-y-2\">\n                    <!-- Notes -->\n                    <div\n                        class=\"relative flex items-center py-2 px-4 font-medium rounded-full cursor-pointer\"\n                        [ngClass]=\"{'bg-gray-200 dark:bg-gray-700 text-primary dark:text-primary-400': filterStatus === 'notes',\n                                'text-hint hover:bg-hover': filterStatus !== 'notes'}\"\n                        (click)=\"resetFilter()\"\n                        matRipple\n                        [matRippleDisabled]=\"filterStatus === 'notes'\">\n                        <mat-icon\n                            class=\"text-current\"\n                            [svgIcon]=\"'heroicons_outline:pencil-alt'\"></mat-icon>\n                        <div class=\"ml-3 leading-5 select-none text-default\">Notes</div>\n                    </div>\n                    <!-- Archive -->\n                    <div\n                        class=\"relative flex items-center py-2 px-4 font-medium rounded-full cursor-pointer\"\n                        [ngClass]=\"{'bg-gray-200 dark:bg-gray-700 text-primary dark:text-primary-400': filterStatus === 'archived',\n                                'text-hint hover:bg-hover': filterStatus !== 'archived'}\"\n                        (click)=\"filterByArchived()\"\n                        matRipple\n                        [matRippleDisabled]=\"filterStatus === 'archived'\">\n                        <mat-icon\n                            class=\"text-current\"\n                            [svgIcon]=\"'heroicons_outline:archive'\"></mat-icon>\n                        <div class=\"ml-3 leading-5 select-none text-default\">Archive</div>\n                    </div>\n                    <!-- Labels -->\n                    <ng-container *ngIf=\"(labels$ | async) as labels\">\n                        <ng-container *ngFor=\"let label of labels; trackBy: trackByFn\">\n                            <div\n                                class=\"relative flex items-center py-2 px-4 font-medium rounded-full cursor-pointer\"\n                                [ngClass]=\"{'bg-gray-200 dark:bg-gray-700 text-primary dark:text-primary-400': 'label:' + label.id === filterStatus,\n                                    'text-hint hover:bg-hover': 'label:' + label.id !== filterStatus}\"\n                                (click)=\"filterByLabel(label.id)\"\n                                matRipple\n                                [matRippleDisabled]=\"'label:' + label.id === filterStatus\">\n                                <mat-icon\n                                    class=\"text-current\"\n                                    [svgIcon]=\"'heroicons_outline:tag'\"></mat-icon>\n                                <div class=\"ml-3 leading-5 select-none text-default\">{{label.title}}</div>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n                    <!-- Edit Labels -->\n                    <div\n                        class=\"relative flex items-center py-2 px-4 font-medium rounded-full cursor-pointer hover:bg-hover\"\n                        (click)=\"openEditLabelsDialog()\"\n                        matRipple>\n                        <mat-icon\n                            class=\"text-hint\"\n                            [svgIcon]=\"'heroicons_outline:pencil'\"></mat-icon>\n                        <div class=\"ml-3 leading-5 select-none\">Edit labels</div>\n                    </div>\n                </div>\n            </div>\n        </mat-drawer>\n\n        <mat-drawer-content class=\"flex flex-col bg-gray-100 dark:bg-transparent\">\n\n            <!-- Main -->\n            <div class=\"flex flex-col flex-auto p-6 md:p-8\">\n\n                <!-- Header -->\n                <div class=\"flex items-center\">\n                    <div class=\"flex items-center flex-auto\">\n                        <button\n                            class=\"flex lg:hidden -ml-2\"\n                            mat-icon-button\n                            (click)=\"drawer.toggle()\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:menu'\"></mat-icon>\n                        </button>\n                        <mat-form-field class=\"fuse-mat-rounded fuse-mat-dense fuse-mat-no-subscript flex-auto ml-4 lg:ml-0\">\n                            <mat-icon\n                                class=\"icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:search'\"\n                                matPrefix></mat-icon>\n                            <input\n                                matInput\n                                [autocomplete]=\"'off'\"\n                                [placeholder]=\"'Search notes'\"\n                                (input)=\"filterByQuery(searchInput.value)\"\n                                #searchInput>\n                        </mat-form-field>\n                    </div>\n                    <!-- New note -->\n                    <button\n                        class=\"ml-4 px-1 sm:px-4 min-w-10\"\n                        mat-flat-button\n                        [color]=\"'primary'\"\n                        (click)=\"addNewNote()\">\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            [svgIcon]=\"'heroicons_solid:plus-circle'\"></mat-icon>\n                        <span class=\"hidden sm:inline-block ml-2\">New note</span>\n                    </button>\n                </div>\n\n                <!-- Notes -->\n                <ng-container *ngIf=\"(notes$ | async) as notes; else loading\">\n                    <ng-container *ngIf=\"notes.length; else noNotes\">\n\n                        <!-- Masonry layout -->\n                        <fuse-masonry\n                            class=\"-mx-2 mt-8\"\n                            [items]=\"notes\"\n                            [columns]=\"masonryColumns\"\n                            [columnsTemplate]=\"columnsTemplate\">\n                            <!-- Columns template -->\n                            <ng-template\n                                #columnsTemplate\n                                let-columns>\n                                <!-- Columns -->\n                                <ng-container *ngFor=\"let column of columns; trackBy: trackByFn\">\n                                    <!-- Column -->\n                                    <div class=\"flex-1 px-2 space-y-4\">\n                                        <ng-container *ngFor=\"let note of column.items; trackBy: trackByFn\">\n                                            <!-- Note -->\n                                            <div\n                                                class=\"flex flex-col shadow rounded-2xl overflow-hidden cursor-pointer bg-card\"\n                                                (click)=\"openNoteDialog(note)\">\n                                                <!-- Image -->\n                                                <ng-container *ngIf=\"note.image\">\n                                                    <img\n                                                        class=\"w-full object-cover\"\n                                                        [src]=\"note.image\">\n                                                </ng-container>\n                                                <div class=\"flex flex-auto flex-col p-6 space-y-4\">\n                                                    <!-- Title -->\n                                                    <ng-container *ngIf=\"note.title\">\n                                                        <div class=\"font-semibold line-clamp-3\">\n                                                            {{note.title}}\n                                                        </div>\n                                                    </ng-container>\n                                                    <!-- Content -->\n                                                    <ng-container *ngIf=\"note.content\">\n                                                        <div [class.text-xl]=\"note.content.length < 70\">\n                                                            {{note.content}}\n                                                        </div>\n                                                    </ng-container>\n                                                    <!-- Tasks -->\n                                                    <ng-container *ngIf=\"note.tasks\">\n                                                        <div class=\"space-y-1.5\">\n                                                            <ng-container *ngFor=\"let task of note.tasks; trackBy: trackByFn\">\n                                                                <div class=\"flex items-center\">\n                                                                    <ng-container *ngIf=\"!task.completed\">\n                                                                        <div class=\"flex items-center justify-center w-5 h-5\">\n                                                                            <div class=\"w-4 h-4 rounded-full border-2\"></div>\n                                                                        </div>\n                                                                    </ng-container>\n                                                                    <ng-container *ngIf=\"task.completed\">\n                                                                        <mat-icon\n                                                                            class=\"text-hint icon-size-5\"\n                                                                            [svgIcon]=\"'heroicons_solid:check-circle'\"></mat-icon>\n                                                                    </ng-container>\n                                                                    <div\n                                                                        class=\"ml-1.5 leading-5\"\n                                                                        [ngClass]=\"{'text-secondary line-through': task.completed}\">\n                                                                        {{task.content}}\n                                                                    </div>\n                                                                </div>\n                                                            </ng-container>\n                                                        </div>\n                                                    </ng-container>\n                                                    <!-- Labels -->\n                                                    <ng-container *ngIf=\"note.labels\">\n                                                        <div class=\"flex flex-wrap items-center -m-1\">\n                                                            <ng-container *ngFor=\"let label of note.labels; trackBy: trackByFn\">\n                                                                <div class=\"m-1 py-0.5 px-3 rounded-full text-sm font-medium text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700\">\n                                                                    {{label.title}}\n                                                                </div>\n                                                            </ng-container>\n                                                        </div>\n                                                    </ng-container>\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                    </div>\n                                </ng-container>\n                            </ng-template>\n                        </fuse-masonry>\n\n                    </ng-container>\n                </ng-container>\n\n                <!-- Loading template -->\n                <ng-template #loading>\n                    <div class=\"flex flex-auto flex-col items-center justify-center bg-gray-100 dark:bg-transparent\">\n                        <div class=\"mt-4 text-2xl font-semibold tracking-tight text-secondary\">Loading...</div>\n                    </div>\n                </ng-template>\n\n                <!-- No notes template -->\n                <ng-template #noNotes>\n                    <div class=\"flex flex-auto flex-col items-center justify-center bg-gray-100 dark:bg-transparent\">\n                        <mat-icon\n                            class=\"icon-size-24\"\n                            [svgIcon]=\"'iconsmind:file_hide'\"></mat-icon>\n                        <div class=\"mt-4 text-2xl font-semibold tracking-tight text-secondary\">There are no notes!</div>\n                    </div>\n                </ng-template>\n\n            </div>\n\n        </mat-drawer-content>\n\n    </mat-drawer-container>\n\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}